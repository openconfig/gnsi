// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.31.1
// source: github.com/openconfig/gnsi/credentialz/credentialz.proto

package credentialz

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type KeyType int32

const (
	KeyType_KEY_TYPE_UNSPECIFIED KeyType = 0
	KeyType_KEY_TYPE_ECDSA_P_256 KeyType = 1
	KeyType_KEY_TYPE_ECDSA_P_521 KeyType = 2
	KeyType_KEY_TYPE_ED25519     KeyType = 3
	KeyType_KEY_TYPE_RSA_2048    KeyType = 4
	KeyType_KEY_TYPE_RSA_4096    KeyType = 5
	KeyType_KEY_TYPE_RSA_3072    KeyType = 6
	KeyType_KEY_TYPE_ECDSA_P_384 KeyType = 7
)

// Enum value maps for KeyType.
var (
	KeyType_name = map[int32]string{
		0: "KEY_TYPE_UNSPECIFIED",
		1: "KEY_TYPE_ECDSA_P_256",
		2: "KEY_TYPE_ECDSA_P_521",
		3: "KEY_TYPE_ED25519",
		4: "KEY_TYPE_RSA_2048",
		5: "KEY_TYPE_RSA_4096",
		6: "KEY_TYPE_RSA_3072",
		7: "KEY_TYPE_ECDSA_P_384",
	}
	KeyType_value = map[string]int32{
		"KEY_TYPE_UNSPECIFIED": 0,
		"KEY_TYPE_ECDSA_P_256": 1,
		"KEY_TYPE_ECDSA_P_521": 2,
		"KEY_TYPE_ED25519":     3,
		"KEY_TYPE_RSA_2048":    4,
		"KEY_TYPE_RSA_4096":    5,
		"KEY_TYPE_RSA_3072":    6,
		"KEY_TYPE_ECDSA_P_384": 7,
	}
)

func (x KeyType) Enum() *KeyType {
	p := new(KeyType)
	*p = x
	return p
}

func (x KeyType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (KeyType) Descriptor() protoreflect.EnumDescriptor {
	return file_github_com_openconfig_gnsi_credentialz_credentialz_proto_enumTypes[0].Descriptor()
}

func (KeyType) Type() protoreflect.EnumType {
	return &file_github_com_openconfig_gnsi_credentialz_credentialz_proto_enumTypes[0]
}

func (x KeyType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use KeyType.Descriptor instead.
func (KeyType) EnumDescriptor() ([]byte, []int) {
	return file_github_com_openconfig_gnsi_credentialz_credentialz_proto_rawDescGZIP(), []int{0}
}

type KeyGen int32

const (
	KeyGen_KEY_GEN_SSH_KEY_UNSPECIFIED        KeyGen = 0
	KeyGen_KEY_GEN_SSH_KEY_TYPE_RSA_2048      KeyGen = 1
	KeyGen_KEY_GEN_SSH_KEY_TYPE_ECDSA_P_256   KeyGen = 2
	KeyGen_KEY_GEN_SSH_KEY_TYPE_ECDSA_P_521   KeyGen = 3
	KeyGen_KEY_GEN_SSH_KEY_TYPE_EDDSA_ED25519 KeyGen = 4
	KeyGen_KEY_GEN_SSH_KEY_TYPE_RSA_4096      KeyGen = 5
	KeyGen_KEY_GEN_SSH_KEY_TYPE_RSA_3072      KeyGen = 6
	KeyGen_KEY_GEN_SSH_KEY_TYPE_ECDSA_P_384   KeyGen = 7
)

// Enum value maps for KeyGen.
var (
	KeyGen_name = map[int32]string{
		0: "KEY_GEN_SSH_KEY_UNSPECIFIED",
		1: "KEY_GEN_SSH_KEY_TYPE_RSA_2048",
		2: "KEY_GEN_SSH_KEY_TYPE_ECDSA_P_256",
		3: "KEY_GEN_SSH_KEY_TYPE_ECDSA_P_521",
		4: "KEY_GEN_SSH_KEY_TYPE_EDDSA_ED25519",
		5: "KEY_GEN_SSH_KEY_TYPE_RSA_4096",
		6: "KEY_GEN_SSH_KEY_TYPE_RSA_3072",
		7: "KEY_GEN_SSH_KEY_TYPE_ECDSA_P_384",
	}
	KeyGen_value = map[string]int32{
		"KEY_GEN_SSH_KEY_UNSPECIFIED":        0,
		"KEY_GEN_SSH_KEY_TYPE_RSA_2048":      1,
		"KEY_GEN_SSH_KEY_TYPE_ECDSA_P_256":   2,
		"KEY_GEN_SSH_KEY_TYPE_ECDSA_P_521":   3,
		"KEY_GEN_SSH_KEY_TYPE_EDDSA_ED25519": 4,
		"KEY_GEN_SSH_KEY_TYPE_RSA_4096":      5,
		"KEY_GEN_SSH_KEY_TYPE_RSA_3072":      6,
		"KEY_GEN_SSH_KEY_TYPE_ECDSA_P_384":   7,
	}
)

func (x KeyGen) Enum() *KeyGen {
	p := new(KeyGen)
	*p = x
	return p
}

func (x KeyGen) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (KeyGen) Descriptor() protoreflect.EnumDescriptor {
	return file_github_com_openconfig_gnsi_credentialz_credentialz_proto_enumTypes[1].Descriptor()
}

func (KeyGen) Type() protoreflect.EnumType {
	return &file_github_com_openconfig_gnsi_credentialz_credentialz_proto_enumTypes[1]
}

func (x KeyGen) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use KeyGen.Descriptor instead.
func (KeyGen) EnumDescriptor() ([]byte, []int) {
	return file_github_com_openconfig_gnsi_credentialz_credentialz_proto_rawDescGZIP(), []int{1}
}

type AuthenticationType int32

const (
	AuthenticationType_AUTHENTICATION_TYPE_UNSPECIFIED    AuthenticationType = 0
	AuthenticationType_AUTHENTICATION_TYPE_PASSWORD       AuthenticationType = 1
	AuthenticationType_AUTHENTICATION_TYPE_PUBKEY         AuthenticationType = 2
	AuthenticationType_AUTHENTICATION_TYPE_KBDINTERACTIVE AuthenticationType = 3
)

// Enum value maps for AuthenticationType.
var (
	AuthenticationType_name = map[int32]string{
		0: "AUTHENTICATION_TYPE_UNSPECIFIED",
		1: "AUTHENTICATION_TYPE_PASSWORD",
		2: "AUTHENTICATION_TYPE_PUBKEY",
		3: "AUTHENTICATION_TYPE_KBDINTERACTIVE",
	}
	AuthenticationType_value = map[string]int32{
		"AUTHENTICATION_TYPE_UNSPECIFIED":    0,
		"AUTHENTICATION_TYPE_PASSWORD":       1,
		"AUTHENTICATION_TYPE_PUBKEY":         2,
		"AUTHENTICATION_TYPE_KBDINTERACTIVE": 3,
	}
)

func (x AuthenticationType) Enum() *AuthenticationType {
	p := new(AuthenticationType)
	*p = x
	return p
}

func (x AuthenticationType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AuthenticationType) Descriptor() protoreflect.EnumDescriptor {
	return file_github_com_openconfig_gnsi_credentialz_credentialz_proto_enumTypes[2].Descriptor()
}

func (AuthenticationType) Type() protoreflect.EnumType {
	return &file_github_com_openconfig_gnsi_credentialz_credentialz_proto_enumTypes[2]
}

func (x AuthenticationType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AuthenticationType.Descriptor instead.
func (AuthenticationType) EnumDescriptor() ([]byte, []int) {
	return file_github_com_openconfig_gnsi_credentialz_credentialz_proto_rawDescGZIP(), []int{2}
}

type Option_StandardOption int32

const (
	Option_STANDARD_OPTION_UNSPECIFIED         Option_StandardOption = 0
	Option_STANDARD_OPTION_AGENT_FORWARDING    Option_StandardOption = 1
	Option_STANDARD_OPTION_CERT_AUTHORITY      Option_StandardOption = 2
	Option_STANDARD_OPTION_COMMAND             Option_StandardOption = 3
	Option_STANDARD_OPTION_ENVIRONMENT         Option_StandardOption = 4
	Option_STANDARD_OPTION_EXPIRY_TIME         Option_StandardOption = 5
	Option_STANDARD_OPTION_FROM                Option_StandardOption = 6
	Option_STANDARD_OPTION_NO_AGENT_FORWARDING Option_StandardOption = 7
	Option_STANDARD_OPTION_NO_PORT_FORWARDING  Option_StandardOption = 8
	Option_STANDARD_OPTION_NO_PTY              Option_StandardOption = 9
	Option_STANDARD_OPTION_NO_USER_RC          Option_StandardOption = 10
	Option_STANDARD_OPTION_NO_X11_FORWARDING   Option_StandardOption = 11
	Option_STANDARD_OPTION_PERMITLISTEN        Option_StandardOption = 12
	Option_STANDARD_OPTION_PERMITOPEN          Option_StandardOption = 13
	Option_STANDARD_OPTION_PORT_FORWARDING     Option_StandardOption = 14
	Option_STANDARD_OPTION_PRINCIPALS          Option_StandardOption = 15
	Option_STANDARD_OPTION_PTY                 Option_StandardOption = 16
	Option_STANDARD_OPTION_NO_TOUCH_REQUIRED   Option_StandardOption = 17
	Option_STANDARD_OPTION_VERIFY_REQUIRED     Option_StandardOption = 18
	Option_STANDARD_OPTION_RESTRICT            Option_StandardOption = 19
	Option_STANDARD_OPTION_TUNNEL              Option_StandardOption = 20
	Option_STANDARD_OPTION_USER_RC             Option_StandardOption = 21
	Option_STANDARD_OPTION_X11_FORWARDING      Option_StandardOption = 22
)

// Enum value maps for Option_StandardOption.
var (
	Option_StandardOption_name = map[int32]string{
		0:  "STANDARD_OPTION_UNSPECIFIED",
		1:  "STANDARD_OPTION_AGENT_FORWARDING",
		2:  "STANDARD_OPTION_CERT_AUTHORITY",
		3:  "STANDARD_OPTION_COMMAND",
		4:  "STANDARD_OPTION_ENVIRONMENT",
		5:  "STANDARD_OPTION_EXPIRY_TIME",
		6:  "STANDARD_OPTION_FROM",
		7:  "STANDARD_OPTION_NO_AGENT_FORWARDING",
		8:  "STANDARD_OPTION_NO_PORT_FORWARDING",
		9:  "STANDARD_OPTION_NO_PTY",
		10: "STANDARD_OPTION_NO_USER_RC",
		11: "STANDARD_OPTION_NO_X11_FORWARDING",
		12: "STANDARD_OPTION_PERMITLISTEN",
		13: "STANDARD_OPTION_PERMITOPEN",
		14: "STANDARD_OPTION_PORT_FORWARDING",
		15: "STANDARD_OPTION_PRINCIPALS",
		16: "STANDARD_OPTION_PTY",
		17: "STANDARD_OPTION_NO_TOUCH_REQUIRED",
		18: "STANDARD_OPTION_VERIFY_REQUIRED",
		19: "STANDARD_OPTION_RESTRICT",
		20: "STANDARD_OPTION_TUNNEL",
		21: "STANDARD_OPTION_USER_RC",
		22: "STANDARD_OPTION_X11_FORWARDING",
	}
	Option_StandardOption_value = map[string]int32{
		"STANDARD_OPTION_UNSPECIFIED":         0,
		"STANDARD_OPTION_AGENT_FORWARDING":    1,
		"STANDARD_OPTION_CERT_AUTHORITY":      2,
		"STANDARD_OPTION_COMMAND":             3,
		"STANDARD_OPTION_ENVIRONMENT":         4,
		"STANDARD_OPTION_EXPIRY_TIME":         5,
		"STANDARD_OPTION_FROM":                6,
		"STANDARD_OPTION_NO_AGENT_FORWARDING": 7,
		"STANDARD_OPTION_NO_PORT_FORWARDING":  8,
		"STANDARD_OPTION_NO_PTY":              9,
		"STANDARD_OPTION_NO_USER_RC":          10,
		"STANDARD_OPTION_NO_X11_FORWARDING":   11,
		"STANDARD_OPTION_PERMITLISTEN":        12,
		"STANDARD_OPTION_PERMITOPEN":          13,
		"STANDARD_OPTION_PORT_FORWARDING":     14,
		"STANDARD_OPTION_PRINCIPALS":          15,
		"STANDARD_OPTION_PTY":                 16,
		"STANDARD_OPTION_NO_TOUCH_REQUIRED":   17,
		"STANDARD_OPTION_VERIFY_REQUIRED":     18,
		"STANDARD_OPTION_RESTRICT":            19,
		"STANDARD_OPTION_TUNNEL":              20,
		"STANDARD_OPTION_USER_RC":             21,
		"STANDARD_OPTION_X11_FORWARDING":      22,
	}
)

func (x Option_StandardOption) Enum() *Option_StandardOption {
	p := new(Option_StandardOption)
	*p = x
	return p
}

func (x Option_StandardOption) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Option_StandardOption) Descriptor() protoreflect.EnumDescriptor {
	return file_github_com_openconfig_gnsi_credentialz_credentialz_proto_enumTypes[3].Descriptor()
}

func (Option_StandardOption) Type() protoreflect.EnumType {
	return &file_github_com_openconfig_gnsi_credentialz_credentialz_proto_enumTypes[3]
}

func (x Option_StandardOption) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Option_StandardOption.Descriptor instead.
func (Option_StandardOption) EnumDescriptor() ([]byte, []int) {
	return file_github_com_openconfig_gnsi_credentialz_credentialz_proto_rawDescGZIP(), []int{3, 0}
}

type PasswordRequest_CryptoHash_HashType int32

const (
	PasswordRequest_CryptoHash_HASH_TYPE_UNSPECIFIED     PasswordRequest_CryptoHash_HashType = 0
	PasswordRequest_CryptoHash_HASH_TYPE_CRYPT_MD5       PasswordRequest_CryptoHash_HashType = 1
	PasswordRequest_CryptoHash_HASH_TYPE_CRYPT_SHA_2_512 PasswordRequest_CryptoHash_HashType = 2
)

// Enum value maps for PasswordRequest_CryptoHash_HashType.
var (
	PasswordRequest_CryptoHash_HashType_name = map[int32]string{
		0: "HASH_TYPE_UNSPECIFIED",
		1: "HASH_TYPE_CRYPT_MD5",
		2: "HASH_TYPE_CRYPT_SHA_2_512",
	}
	PasswordRequest_CryptoHash_HashType_value = map[string]int32{
		"HASH_TYPE_UNSPECIFIED":     0,
		"HASH_TYPE_CRYPT_MD5":       1,
		"HASH_TYPE_CRYPT_SHA_2_512": 2,
	}
)

func (x PasswordRequest_CryptoHash_HashType) Enum() *PasswordRequest_CryptoHash_HashType {
	p := new(PasswordRequest_CryptoHash_HashType)
	*p = x
	return p
}

func (x PasswordRequest_CryptoHash_HashType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PasswordRequest_CryptoHash_HashType) Descriptor() protoreflect.EnumDescriptor {
	return file_github_com_openconfig_gnsi_credentialz_credentialz_proto_enumTypes[4].Descriptor()
}

func (PasswordRequest_CryptoHash_HashType) Type() protoreflect.EnumType {
	return &file_github_com_openconfig_gnsi_credentialz_credentialz_proto_enumTypes[4]
}

func (x PasswordRequest_CryptoHash_HashType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PasswordRequest_CryptoHash_HashType.Descriptor instead.
func (PasswordRequest_CryptoHash_HashType) EnumDescriptor() ([]byte, []int) {
	return file_github_com_openconfig_gnsi_credentialz_credentialz_proto_rawDescGZIP(), []int{9, 0, 0}
}

type AuthorizedPrincipalCheckRequest_Tool int32

const (
	AuthorizedPrincipalCheckRequest_TOOL_UNSPECIFIED  AuthorizedPrincipalCheckRequest_Tool = 0
	AuthorizedPrincipalCheckRequest_TOOL_HIBA_DEFAULT AuthorizedPrincipalCheckRequest_Tool = 1
)

// Enum value maps for AuthorizedPrincipalCheckRequest_Tool.
var (
	AuthorizedPrincipalCheckRequest_Tool_name = map[int32]string{
		0: "TOOL_UNSPECIFIED",
		1: "TOOL_HIBA_DEFAULT",
	}
	AuthorizedPrincipalCheckRequest_Tool_value = map[string]int32{
		"TOOL_UNSPECIFIED":  0,
		"TOOL_HIBA_DEFAULT": 1,
	}
)

func (x AuthorizedPrincipalCheckRequest_Tool) Enum() *AuthorizedPrincipalCheckRequest_Tool {
	p := new(AuthorizedPrincipalCheckRequest_Tool)
	*p = x
	return p
}

func (x AuthorizedPrincipalCheckRequest_Tool) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AuthorizedPrincipalCheckRequest_Tool) Descriptor() protoreflect.EnumDescriptor {
	return file_github_com_openconfig_gnsi_credentialz_credentialz_proto_enumTypes[5].Descriptor()
}

func (AuthorizedPrincipalCheckRequest_Tool) Type() protoreflect.EnumType {
	return &file_github_com_openconfig_gnsi_credentialz_credentialz_proto_enumTypes[5]
}

func (x AuthorizedPrincipalCheckRequest_Tool) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AuthorizedPrincipalCheckRequest_Tool.Descriptor instead.
func (AuthorizedPrincipalCheckRequest_Tool) EnumDescriptor() ([]byte, []int) {
	return file_github_com_openconfig_gnsi_credentialz_credentialz_proto_rawDescGZIP(), []int{18, 0}
}

type RotateAccountCredentialsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Request:
	//
	//	*RotateAccountCredentialsRequest_Credential
	//	*RotateAccountCredentialsRequest_User
	//	*RotateAccountCredentialsRequest_Password
	//	*RotateAccountCredentialsRequest_Finalize
	Request        isRotateAccountCredentialsRequest_Request `protobuf_oneof:"request"`
	ForceOverwrite bool                                      `protobuf:"varint,5,opt,name=force_overwrite,json=forceOverwrite,proto3" json:"force_overwrite,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *RotateAccountCredentialsRequest) Reset() {
	*x = RotateAccountCredentialsRequest{}
	mi := &file_github_com_openconfig_gnsi_credentialz_credentialz_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RotateAccountCredentialsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RotateAccountCredentialsRequest) ProtoMessage() {}

func (x *RotateAccountCredentialsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_gnsi_credentialz_credentialz_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RotateAccountCredentialsRequest.ProtoReflect.Descriptor instead.
func (*RotateAccountCredentialsRequest) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_gnsi_credentialz_credentialz_proto_rawDescGZIP(), []int{0}
}

func (x *RotateAccountCredentialsRequest) GetRequest() isRotateAccountCredentialsRequest_Request {
	if x != nil {
		return x.Request
	}
	return nil
}

func (x *RotateAccountCredentialsRequest) GetCredential() *AuthorizedKeysRequest {
	if x != nil {
		if x, ok := x.Request.(*RotateAccountCredentialsRequest_Credential); ok {
			return x.Credential
		}
	}
	return nil
}

func (x *RotateAccountCredentialsRequest) GetUser() *AuthorizedUsersRequest {
	if x != nil {
		if x, ok := x.Request.(*RotateAccountCredentialsRequest_User); ok {
			return x.User
		}
	}
	return nil
}

func (x *RotateAccountCredentialsRequest) GetPassword() *PasswordRequest {
	if x != nil {
		if x, ok := x.Request.(*RotateAccountCredentialsRequest_Password); ok {
			return x.Password
		}
	}
	return nil
}

func (x *RotateAccountCredentialsRequest) GetFinalize() *FinalizeRequest {
	if x != nil {
		if x, ok := x.Request.(*RotateAccountCredentialsRequest_Finalize); ok {
			return x.Finalize
		}
	}
	return nil
}

func (x *RotateAccountCredentialsRequest) GetForceOverwrite() bool {
	if x != nil {
		return x.ForceOverwrite
	}
	return false
}

type isRotateAccountCredentialsRequest_Request interface {
	isRotateAccountCredentialsRequest_Request()
}

type RotateAccountCredentialsRequest_Credential struct {
	Credential *AuthorizedKeysRequest `protobuf:"bytes,1,opt,name=credential,proto3,oneof"`
}

type RotateAccountCredentialsRequest_User struct {
	User *AuthorizedUsersRequest `protobuf:"bytes,2,opt,name=user,proto3,oneof"`
}

type RotateAccountCredentialsRequest_Password struct {
	Password *PasswordRequest `protobuf:"bytes,3,opt,name=password,proto3,oneof"`
}

type RotateAccountCredentialsRequest_Finalize struct {
	Finalize *FinalizeRequest `protobuf:"bytes,4,opt,name=finalize,proto3,oneof"`
}

func (*RotateAccountCredentialsRequest_Credential) isRotateAccountCredentialsRequest_Request() {}

func (*RotateAccountCredentialsRequest_User) isRotateAccountCredentialsRequest_Request() {}

func (*RotateAccountCredentialsRequest_Password) isRotateAccountCredentialsRequest_Request() {}

func (*RotateAccountCredentialsRequest_Finalize) isRotateAccountCredentialsRequest_Request() {}

type RotateAccountCredentialsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Response:
	//
	//	*RotateAccountCredentialsResponse_Credential
	//	*RotateAccountCredentialsResponse_User
	//	*RotateAccountCredentialsResponse_Password
	Response      isRotateAccountCredentialsResponse_Response `protobuf_oneof:"response"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RotateAccountCredentialsResponse) Reset() {
	*x = RotateAccountCredentialsResponse{}
	mi := &file_github_com_openconfig_gnsi_credentialz_credentialz_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RotateAccountCredentialsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RotateAccountCredentialsResponse) ProtoMessage() {}

func (x *RotateAccountCredentialsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_gnsi_credentialz_credentialz_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RotateAccountCredentialsResponse.ProtoReflect.Descriptor instead.
func (*RotateAccountCredentialsResponse) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_gnsi_credentialz_credentialz_proto_rawDescGZIP(), []int{1}
}

func (x *RotateAccountCredentialsResponse) GetResponse() isRotateAccountCredentialsResponse_Response {
	if x != nil {
		return x.Response
	}
	return nil
}

func (x *RotateAccountCredentialsResponse) GetCredential() *AuthorizedKeysResponse {
	if x != nil {
		if x, ok := x.Response.(*RotateAccountCredentialsResponse_Credential); ok {
			return x.Credential
		}
	}
	return nil
}

func (x *RotateAccountCredentialsResponse) GetUser() *AuthorizedUsersResponse {
	if x != nil {
		if x, ok := x.Response.(*RotateAccountCredentialsResponse_User); ok {
			return x.User
		}
	}
	return nil
}

func (x *RotateAccountCredentialsResponse) GetPassword() *PasswordResponse {
	if x != nil {
		if x, ok := x.Response.(*RotateAccountCredentialsResponse_Password); ok {
			return x.Password
		}
	}
	return nil
}

type isRotateAccountCredentialsResponse_Response interface {
	isRotateAccountCredentialsResponse_Response()
}

type RotateAccountCredentialsResponse_Credential struct {
	Credential *AuthorizedKeysResponse `protobuf:"bytes,1,opt,name=credential,proto3,oneof"`
}

type RotateAccountCredentialsResponse_User struct {
	User *AuthorizedUsersResponse `protobuf:"bytes,2,opt,name=user,proto3,oneof"`
}

type RotateAccountCredentialsResponse_Password struct {
	Password *PasswordResponse `protobuf:"bytes,3,opt,name=password,proto3,oneof"`
}

func (*RotateAccountCredentialsResponse_Credential) isRotateAccountCredentialsResponse_Response() {}

func (*RotateAccountCredentialsResponse_User) isRotateAccountCredentialsResponse_Response() {}

func (*RotateAccountCredentialsResponse_Password) isRotateAccountCredentialsResponse_Response() {}

type AuthorizedKeysRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Credentials   []*AccountCredentials  `protobuf:"bytes,1,rep,name=credentials,proto3" json:"credentials,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AuthorizedKeysRequest) Reset() {
	*x = AuthorizedKeysRequest{}
	mi := &file_github_com_openconfig_gnsi_credentialz_credentialz_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AuthorizedKeysRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthorizedKeysRequest) ProtoMessage() {}

func (x *AuthorizedKeysRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_gnsi_credentialz_credentialz_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthorizedKeysRequest.ProtoReflect.Descriptor instead.
func (*AuthorizedKeysRequest) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_gnsi_credentialz_credentialz_proto_rawDescGZIP(), []int{2}
}

func (x *AuthorizedKeysRequest) GetCredentials() []*AccountCredentials {
	if x != nil {
		return x.Credentials
	}
	return nil
}

type Option struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Key:
	//
	//	*Option_Name
	//	*Option_Id
	Key           isOption_Key `protobuf_oneof:"key"`
	Value         string       `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Option) Reset() {
	*x = Option{}
	mi := &file_github_com_openconfig_gnsi_credentialz_credentialz_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Option) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Option) ProtoMessage() {}

func (x *Option) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_gnsi_credentialz_credentialz_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Option.ProtoReflect.Descriptor instead.
func (*Option) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_gnsi_credentialz_credentialz_proto_rawDescGZIP(), []int{3}
}

func (x *Option) GetKey() isOption_Key {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *Option) GetName() string {
	if x != nil {
		if x, ok := x.Key.(*Option_Name); ok {
			return x.Name
		}
	}
	return ""
}

func (x *Option) GetId() Option_StandardOption {
	if x != nil {
		if x, ok := x.Key.(*Option_Id); ok {
			return x.Id
		}
	}
	return Option_STANDARD_OPTION_UNSPECIFIED
}

func (x *Option) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type isOption_Key interface {
	isOption_Key()
}

type Option_Name struct {
	Name string `protobuf:"bytes,1,opt,name=name,proto3,oneof"`
}

type Option_Id struct {
	Id Option_StandardOption `protobuf:"varint,2,opt,name=id,proto3,enum=gnsi.credentialz.v1.Option_StandardOption,oneof"`
}

func (*Option_Name) isOption_Key() {}

func (*Option_Id) isOption_Key() {}

type AccountCredentials struct {
	state          protoimpl.MessageState              `protogen:"open.v1"`
	Account        string                              `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
	AuthorizedKeys []*AccountCredentials_AuthorizedKey `protobuf:"bytes,2,rep,name=authorized_keys,json=authorizedKeys,proto3" json:"authorized_keys,omitempty"`
	Version        string                              `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
	CreatedOn      uint64                              `protobuf:"varint,4,opt,name=created_on,json=createdOn,proto3" json:"created_on,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *AccountCredentials) Reset() {
	*x = AccountCredentials{}
	mi := &file_github_com_openconfig_gnsi_credentialz_credentialz_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AccountCredentials) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountCredentials) ProtoMessage() {}

func (x *AccountCredentials) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_gnsi_credentialz_credentialz_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountCredentials.ProtoReflect.Descriptor instead.
func (*AccountCredentials) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_gnsi_credentialz_credentialz_proto_rawDescGZIP(), []int{4}
}

func (x *AccountCredentials) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *AccountCredentials) GetAuthorizedKeys() []*AccountCredentials_AuthorizedKey {
	if x != nil {
		return x.AuthorizedKeys
	}
	return nil
}

func (x *AccountCredentials) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *AccountCredentials) GetCreatedOn() uint64 {
	if x != nil {
		return x.CreatedOn
	}
	return 0
}

type AuthorizedKeysResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AuthorizedKeysResponse) Reset() {
	*x = AuthorizedKeysResponse{}
	mi := &file_github_com_openconfig_gnsi_credentialz_credentialz_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AuthorizedKeysResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthorizedKeysResponse) ProtoMessage() {}

func (x *AuthorizedKeysResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_gnsi_credentialz_credentialz_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthorizedKeysResponse.ProtoReflect.Descriptor instead.
func (*AuthorizedKeysResponse) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_gnsi_credentialz_credentialz_proto_rawDescGZIP(), []int{5}
}

type AuthorizedUsersRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Policies      []*UserPolicy          `protobuf:"bytes,1,rep,name=policies,proto3" json:"policies,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AuthorizedUsersRequest) Reset() {
	*x = AuthorizedUsersRequest{}
	mi := &file_github_com_openconfig_gnsi_credentialz_credentialz_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AuthorizedUsersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthorizedUsersRequest) ProtoMessage() {}

func (x *AuthorizedUsersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_gnsi_credentialz_credentialz_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthorizedUsersRequest.ProtoReflect.Descriptor instead.
func (*AuthorizedUsersRequest) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_gnsi_credentialz_credentialz_proto_rawDescGZIP(), []int{6}
}

func (x *AuthorizedUsersRequest) GetPolicies() []*UserPolicy {
	if x != nil {
		return x.Policies
	}
	return nil
}

type UserPolicy struct {
	state                protoimpl.MessageState              `protogen:"open.v1"`
	Account              string                              `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
	AuthorizedPrincipals *UserPolicy_SshAuthorizedPrincipals `protobuf:"bytes,2,opt,name=authorized_principals,json=authorizedPrincipals,proto3" json:"authorized_principals,omitempty"`
	Version              string                              `protobuf:"bytes,4,opt,name=version,proto3" json:"version,omitempty"`
	CreatedOn            uint64                              `protobuf:"varint,5,opt,name=created_on,json=createdOn,proto3" json:"created_on,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *UserPolicy) Reset() {
	*x = UserPolicy{}
	mi := &file_github_com_openconfig_gnsi_credentialz_credentialz_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserPolicy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserPolicy) ProtoMessage() {}

func (x *UserPolicy) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_gnsi_credentialz_credentialz_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserPolicy.ProtoReflect.Descriptor instead.
func (*UserPolicy) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_gnsi_credentialz_credentialz_proto_rawDescGZIP(), []int{7}
}

func (x *UserPolicy) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *UserPolicy) GetAuthorizedPrincipals() *UserPolicy_SshAuthorizedPrincipals {
	if x != nil {
		return x.AuthorizedPrincipals
	}
	return nil
}

func (x *UserPolicy) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *UserPolicy) GetCreatedOn() uint64 {
	if x != nil {
		return x.CreatedOn
	}
	return 0
}

type AuthorizedUsersResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AuthorizedUsersResponse) Reset() {
	*x = AuthorizedUsersResponse{}
	mi := &file_github_com_openconfig_gnsi_credentialz_credentialz_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AuthorizedUsersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthorizedUsersResponse) ProtoMessage() {}

func (x *AuthorizedUsersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_gnsi_credentialz_credentialz_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthorizedUsersResponse.ProtoReflect.Descriptor instead.
func (*AuthorizedUsersResponse) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_gnsi_credentialz_credentialz_proto_rawDescGZIP(), []int{8}
}

type PasswordRequest struct {
	state         protoimpl.MessageState     `protogen:"open.v1"`
	Accounts      []*PasswordRequest_Account `protobuf:"bytes,1,rep,name=accounts,proto3" json:"accounts,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PasswordRequest) Reset() {
	*x = PasswordRequest{}
	mi := &file_github_com_openconfig_gnsi_credentialz_credentialz_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PasswordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PasswordRequest) ProtoMessage() {}

func (x *PasswordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_gnsi_credentialz_credentialz_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PasswordRequest.ProtoReflect.Descriptor instead.
func (*PasswordRequest) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_gnsi_credentialz_credentialz_proto_rawDescGZIP(), []int{9}
}

func (x *PasswordRequest) GetAccounts() []*PasswordRequest_Account {
	if x != nil {
		return x.Accounts
	}
	return nil
}

type PasswordResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PasswordResponse) Reset() {
	*x = PasswordResponse{}
	mi := &file_github_com_openconfig_gnsi_credentialz_credentialz_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PasswordResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PasswordResponse) ProtoMessage() {}

func (x *PasswordResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_gnsi_credentialz_credentialz_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PasswordResponse.ProtoReflect.Descriptor instead.
func (*PasswordResponse) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_gnsi_credentialz_credentialz_proto_rawDescGZIP(), []int{10}
}

type RotateHostParametersRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Request:
	//
	//	*RotateHostParametersRequest_SshCaPublicKey
	//	*RotateHostParametersRequest_ServerKeys
	//	*RotateHostParametersRequest_Finalize
	//	*RotateHostParametersRequest_GenerateKeys
	//	*RotateHostParametersRequest_AuthenticationAllowed
	//	*RotateHostParametersRequest_AuthorizedPrincipalCheck
	//	*RotateHostParametersRequest_Glome
	Request       isRotateHostParametersRequest_Request `protobuf_oneof:"request"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RotateHostParametersRequest) Reset() {
	*x = RotateHostParametersRequest{}
	mi := &file_github_com_openconfig_gnsi_credentialz_credentialz_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RotateHostParametersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RotateHostParametersRequest) ProtoMessage() {}

func (x *RotateHostParametersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_gnsi_credentialz_credentialz_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RotateHostParametersRequest.ProtoReflect.Descriptor instead.
func (*RotateHostParametersRequest) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_gnsi_credentialz_credentialz_proto_rawDescGZIP(), []int{11}
}

func (x *RotateHostParametersRequest) GetRequest() isRotateHostParametersRequest_Request {
	if x != nil {
		return x.Request
	}
	return nil
}

func (x *RotateHostParametersRequest) GetSshCaPublicKey() *CaPublicKeyRequest {
	if x != nil {
		if x, ok := x.Request.(*RotateHostParametersRequest_SshCaPublicKey); ok {
			return x.SshCaPublicKey
		}
	}
	return nil
}

func (x *RotateHostParametersRequest) GetServerKeys() *ServerKeysRequest {
	if x != nil {
		if x, ok := x.Request.(*RotateHostParametersRequest_ServerKeys); ok {
			return x.ServerKeys
		}
	}
	return nil
}

func (x *RotateHostParametersRequest) GetFinalize() *FinalizeRequest {
	if x != nil {
		if x, ok := x.Request.(*RotateHostParametersRequest_Finalize); ok {
			return x.Finalize
		}
	}
	return nil
}

func (x *RotateHostParametersRequest) GetGenerateKeys() *GenerateKeysRequest {
	if x != nil {
		if x, ok := x.Request.(*RotateHostParametersRequest_GenerateKeys); ok {
			return x.GenerateKeys
		}
	}
	return nil
}

func (x *RotateHostParametersRequest) GetAuthenticationAllowed() *AllowedAuthenticationRequest {
	if x != nil {
		if x, ok := x.Request.(*RotateHostParametersRequest_AuthenticationAllowed); ok {
			return x.AuthenticationAllowed
		}
	}
	return nil
}

func (x *RotateHostParametersRequest) GetAuthorizedPrincipalCheck() *AuthorizedPrincipalCheckRequest {
	if x != nil {
		if x, ok := x.Request.(*RotateHostParametersRequest_AuthorizedPrincipalCheck); ok {
			return x.AuthorizedPrincipalCheck
		}
	}
	return nil
}

func (x *RotateHostParametersRequest) GetGlome() *GlomeRequest {
	if x != nil {
		if x, ok := x.Request.(*RotateHostParametersRequest_Glome); ok {
			return x.Glome
		}
	}
	return nil
}

type isRotateHostParametersRequest_Request interface {
	isRotateHostParametersRequest_Request()
}

type RotateHostParametersRequest_SshCaPublicKey struct {
	SshCaPublicKey *CaPublicKeyRequest `protobuf:"bytes,1,opt,name=ssh_ca_public_key,json=sshCaPublicKey,proto3,oneof"`
}

type RotateHostParametersRequest_ServerKeys struct {
	ServerKeys *ServerKeysRequest `protobuf:"bytes,2,opt,name=server_keys,json=serverKeys,proto3,oneof"`
}

type RotateHostParametersRequest_Finalize struct {
	Finalize *FinalizeRequest `protobuf:"bytes,3,opt,name=finalize,proto3,oneof"`
}

type RotateHostParametersRequest_GenerateKeys struct {
	GenerateKeys *GenerateKeysRequest `protobuf:"bytes,4,opt,name=generate_keys,json=generateKeys,proto3,oneof"`
}

type RotateHostParametersRequest_AuthenticationAllowed struct {
	AuthenticationAllowed *AllowedAuthenticationRequest `protobuf:"bytes,5,opt,name=authentication_allowed,json=authenticationAllowed,proto3,oneof"`
}

type RotateHostParametersRequest_AuthorizedPrincipalCheck struct {
	AuthorizedPrincipalCheck *AuthorizedPrincipalCheckRequest `protobuf:"bytes,6,opt,name=authorized_principal_check,json=authorizedPrincipalCheck,proto3,oneof"`
}

type RotateHostParametersRequest_Glome struct {
	Glome *GlomeRequest `protobuf:"bytes,7,opt,name=glome,proto3,oneof"`
}

func (*RotateHostParametersRequest_SshCaPublicKey) isRotateHostParametersRequest_Request() {}

func (*RotateHostParametersRequest_ServerKeys) isRotateHostParametersRequest_Request() {}

func (*RotateHostParametersRequest_Finalize) isRotateHostParametersRequest_Request() {}

func (*RotateHostParametersRequest_GenerateKeys) isRotateHostParametersRequest_Request() {}

func (*RotateHostParametersRequest_AuthenticationAllowed) isRotateHostParametersRequest_Request() {}

func (*RotateHostParametersRequest_AuthorizedPrincipalCheck) isRotateHostParametersRequest_Request() {
}

func (*RotateHostParametersRequest_Glome) isRotateHostParametersRequest_Request() {}

type RotateHostParametersResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Response:
	//
	//	*RotateHostParametersResponse_SshCaPublicKey
	//	*RotateHostParametersResponse_ServerKeys
	//	*RotateHostParametersResponse_GenerateKeys
	//	*RotateHostParametersResponse_AuthenticationAllowed
	//	*RotateHostParametersResponse_AuthorizedPrincipalCheck
	//	*RotateHostParametersResponse_Glome
	Response      isRotateHostParametersResponse_Response `protobuf_oneof:"response"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RotateHostParametersResponse) Reset() {
	*x = RotateHostParametersResponse{}
	mi := &file_github_com_openconfig_gnsi_credentialz_credentialz_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RotateHostParametersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RotateHostParametersResponse) ProtoMessage() {}

func (x *RotateHostParametersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_gnsi_credentialz_credentialz_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RotateHostParametersResponse.ProtoReflect.Descriptor instead.
func (*RotateHostParametersResponse) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_gnsi_credentialz_credentialz_proto_rawDescGZIP(), []int{12}
}

func (x *RotateHostParametersResponse) GetResponse() isRotateHostParametersResponse_Response {
	if x != nil {
		return x.Response
	}
	return nil
}

func (x *RotateHostParametersResponse) GetSshCaPublicKey() *CaPublicKeyResponse {
	if x != nil {
		if x, ok := x.Response.(*RotateHostParametersResponse_SshCaPublicKey); ok {
			return x.SshCaPublicKey
		}
	}
	return nil
}

func (x *RotateHostParametersResponse) GetServerKeys() *ServerKeysResponse {
	if x != nil {
		if x, ok := x.Response.(*RotateHostParametersResponse_ServerKeys); ok {
			return x.ServerKeys
		}
	}
	return nil
}

func (x *RotateHostParametersResponse) GetGenerateKeys() *GenerateKeysResponse {
	if x != nil {
		if x, ok := x.Response.(*RotateHostParametersResponse_GenerateKeys); ok {
			return x.GenerateKeys
		}
	}
	return nil
}

func (x *RotateHostParametersResponse) GetAuthenticationAllowed() *AllowedAuthenticationResponse {
	if x != nil {
		if x, ok := x.Response.(*RotateHostParametersResponse_AuthenticationAllowed); ok {
			return x.AuthenticationAllowed
		}
	}
	return nil
}

func (x *RotateHostParametersResponse) GetAuthorizedPrincipalCheck() *AuthorizedPrincipalCheckResponse {
	if x != nil {
		if x, ok := x.Response.(*RotateHostParametersResponse_AuthorizedPrincipalCheck); ok {
			return x.AuthorizedPrincipalCheck
		}
	}
	return nil
}

func (x *RotateHostParametersResponse) GetGlome() *GlomeResponse {
	if x != nil {
		if x, ok := x.Response.(*RotateHostParametersResponse_Glome); ok {
			return x.Glome
		}
	}
	return nil
}

type isRotateHostParametersResponse_Response interface {
	isRotateHostParametersResponse_Response()
}

type RotateHostParametersResponse_SshCaPublicKey struct {
	SshCaPublicKey *CaPublicKeyResponse `protobuf:"bytes,1,opt,name=ssh_ca_public_key,json=sshCaPublicKey,proto3,oneof"`
}

type RotateHostParametersResponse_ServerKeys struct {
	ServerKeys *ServerKeysResponse `protobuf:"bytes,2,opt,name=server_keys,json=serverKeys,proto3,oneof"`
}

type RotateHostParametersResponse_GenerateKeys struct {
	GenerateKeys *GenerateKeysResponse `protobuf:"bytes,3,opt,name=generate_keys,json=generateKeys,proto3,oneof"`
}

type RotateHostParametersResponse_AuthenticationAllowed struct {
	AuthenticationAllowed *AllowedAuthenticationResponse `protobuf:"bytes,4,opt,name=authentication_allowed,json=authenticationAllowed,proto3,oneof"`
}

type RotateHostParametersResponse_AuthorizedPrincipalCheck struct {
	AuthorizedPrincipalCheck *AuthorizedPrincipalCheckResponse `protobuf:"bytes,5,opt,name=authorized_principal_check,json=authorizedPrincipalCheck,proto3,oneof"`
}

type RotateHostParametersResponse_Glome struct {
	Glome *GlomeResponse `protobuf:"bytes,6,opt,name=glome,proto3,oneof"`
}

func (*RotateHostParametersResponse_SshCaPublicKey) isRotateHostParametersResponse_Response() {}

func (*RotateHostParametersResponse_ServerKeys) isRotateHostParametersResponse_Response() {}

func (*RotateHostParametersResponse_GenerateKeys) isRotateHostParametersResponse_Response() {}

func (*RotateHostParametersResponse_AuthenticationAllowed) isRotateHostParametersResponse_Response() {
}

func (*RotateHostParametersResponse_AuthorizedPrincipalCheck) isRotateHostParametersResponse_Response() {
}

func (*RotateHostParametersResponse_Glome) isRotateHostParametersResponse_Response() {}

type CanGenerateKeyRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	KeyParams     KeyGen                 `protobuf:"varint,1,opt,name=key_params,json=keyParams,proto3,enum=gnsi.credentialz.v1.KeyGen" json:"key_params,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CanGenerateKeyRequest) Reset() {
	*x = CanGenerateKeyRequest{}
	mi := &file_github_com_openconfig_gnsi_credentialz_credentialz_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CanGenerateKeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CanGenerateKeyRequest) ProtoMessage() {}

func (x *CanGenerateKeyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_gnsi_credentialz_credentialz_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CanGenerateKeyRequest.ProtoReflect.Descriptor instead.
func (*CanGenerateKeyRequest) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_gnsi_credentialz_credentialz_proto_rawDescGZIP(), []int{13}
}

func (x *CanGenerateKeyRequest) GetKeyParams() KeyGen {
	if x != nil {
		return x.KeyParams
	}
	return KeyGen_KEY_GEN_SSH_KEY_UNSPECIFIED
}

type CanGenerateKeyResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CanGenerate   bool                   `protobuf:"varint,1,opt,name=can_generate,json=canGenerate,proto3" json:"can_generate,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CanGenerateKeyResponse) Reset() {
	*x = CanGenerateKeyResponse{}
	mi := &file_github_com_openconfig_gnsi_credentialz_credentialz_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CanGenerateKeyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CanGenerateKeyResponse) ProtoMessage() {}

func (x *CanGenerateKeyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_gnsi_credentialz_credentialz_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CanGenerateKeyResponse.ProtoReflect.Descriptor instead.
func (*CanGenerateKeyResponse) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_gnsi_credentialz_credentialz_proto_rawDescGZIP(), []int{14}
}

func (x *CanGenerateKeyResponse) GetCanGenerate() bool {
	if x != nil {
		return x.CanGenerate
	}
	return false
}

type PublicKey struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PublicKey     []byte                 `protobuf:"bytes,1,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
	KeyType       KeyType                `protobuf:"varint,2,opt,name=key_type,json=keyType,proto3,enum=gnsi.credentialz.v1.KeyType" json:"key_type,omitempty"`
	Description   string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PublicKey) Reset() {
	*x = PublicKey{}
	mi := &file_github_com_openconfig_gnsi_credentialz_credentialz_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PublicKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublicKey) ProtoMessage() {}

func (x *PublicKey) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_gnsi_credentialz_credentialz_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublicKey.ProtoReflect.Descriptor instead.
func (*PublicKey) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_gnsi_credentialz_credentialz_proto_rawDescGZIP(), []int{15}
}

func (x *PublicKey) GetPublicKey() []byte {
	if x != nil {
		return x.PublicKey
	}
	return nil
}

func (x *PublicKey) GetKeyType() KeyType {
	if x != nil {
		return x.KeyType
	}
	return KeyType_KEY_TYPE_UNSPECIFIED
}

func (x *PublicKey) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type CaPublicKeyRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	SshCaPublicKeys []*PublicKey           `protobuf:"bytes,1,rep,name=ssh_ca_public_keys,json=sshCaPublicKeys,proto3" json:"ssh_ca_public_keys,omitempty"`
	Version         string                 `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	CreatedOn       uint64                 `protobuf:"varint,3,opt,name=created_on,json=createdOn,proto3" json:"created_on,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *CaPublicKeyRequest) Reset() {
	*x = CaPublicKeyRequest{}
	mi := &file_github_com_openconfig_gnsi_credentialz_credentialz_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CaPublicKeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CaPublicKeyRequest) ProtoMessage() {}

func (x *CaPublicKeyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_gnsi_credentialz_credentialz_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CaPublicKeyRequest.ProtoReflect.Descriptor instead.
func (*CaPublicKeyRequest) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_gnsi_credentialz_credentialz_proto_rawDescGZIP(), []int{16}
}

func (x *CaPublicKeyRequest) GetSshCaPublicKeys() []*PublicKey {
	if x != nil {
		return x.SshCaPublicKeys
	}
	return nil
}

func (x *CaPublicKeyRequest) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *CaPublicKeyRequest) GetCreatedOn() uint64 {
	if x != nil {
		return x.CreatedOn
	}
	return 0
}

type CaPublicKeyResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CaPublicKeyResponse) Reset() {
	*x = CaPublicKeyResponse{}
	mi := &file_github_com_openconfig_gnsi_credentialz_credentialz_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CaPublicKeyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CaPublicKeyResponse) ProtoMessage() {}

func (x *CaPublicKeyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_gnsi_credentialz_credentialz_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CaPublicKeyResponse.ProtoReflect.Descriptor instead.
func (*CaPublicKeyResponse) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_gnsi_credentialz_credentialz_proto_rawDescGZIP(), []int{17}
}

type AuthorizedPrincipalCheckRequest struct {
	state         protoimpl.MessageState               `protogen:"open.v1"`
	Tool          AuthorizedPrincipalCheckRequest_Tool `protobuf:"varint,1,opt,name=tool,proto3,enum=gnsi.credentialz.v1.AuthorizedPrincipalCheckRequest_Tool" json:"tool,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AuthorizedPrincipalCheckRequest) Reset() {
	*x = AuthorizedPrincipalCheckRequest{}
	mi := &file_github_com_openconfig_gnsi_credentialz_credentialz_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AuthorizedPrincipalCheckRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthorizedPrincipalCheckRequest) ProtoMessage() {}

func (x *AuthorizedPrincipalCheckRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_gnsi_credentialz_credentialz_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthorizedPrincipalCheckRequest.ProtoReflect.Descriptor instead.
func (*AuthorizedPrincipalCheckRequest) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_gnsi_credentialz_credentialz_proto_rawDescGZIP(), []int{18}
}

func (x *AuthorizedPrincipalCheckRequest) GetTool() AuthorizedPrincipalCheckRequest_Tool {
	if x != nil {
		return x.Tool
	}
	return AuthorizedPrincipalCheckRequest_TOOL_UNSPECIFIED
}

type AuthorizedPrincipalCheckResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AuthorizedPrincipalCheckResponse) Reset() {
	*x = AuthorizedPrincipalCheckResponse{}
	mi := &file_github_com_openconfig_gnsi_credentialz_credentialz_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AuthorizedPrincipalCheckResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthorizedPrincipalCheckResponse) ProtoMessage() {}

func (x *AuthorizedPrincipalCheckResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_gnsi_credentialz_credentialz_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthorizedPrincipalCheckResponse.ProtoReflect.Descriptor instead.
func (*AuthorizedPrincipalCheckResponse) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_gnsi_credentialz_credentialz_proto_rawDescGZIP(), []int{19}
}

type GlomeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Enabled       bool                   `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	Key           string                 `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	KeyVersion    int32                  `protobuf:"varint,3,opt,name=key_version,json=keyVersion,proto3" json:"key_version,omitempty"`
	UrlPrefix     string                 `protobuf:"bytes,4,opt,name=url_prefix,json=urlPrefix,proto3" json:"url_prefix,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GlomeRequest) Reset() {
	*x = GlomeRequest{}
	mi := &file_github_com_openconfig_gnsi_credentialz_credentialz_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GlomeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlomeRequest) ProtoMessage() {}

func (x *GlomeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_gnsi_credentialz_credentialz_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GlomeRequest.ProtoReflect.Descriptor instead.
func (*GlomeRequest) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_gnsi_credentialz_credentialz_proto_rawDescGZIP(), []int{20}
}

func (x *GlomeRequest) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *GlomeRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *GlomeRequest) GetKeyVersion() int32 {
	if x != nil {
		return x.KeyVersion
	}
	return 0
}

func (x *GlomeRequest) GetUrlPrefix() string {
	if x != nil {
		return x.UrlPrefix
	}
	return ""
}

type GlomeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GlomeResponse) Reset() {
	*x = GlomeResponse{}
	mi := &file_github_com_openconfig_gnsi_credentialz_credentialz_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GlomeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlomeResponse) ProtoMessage() {}

func (x *GlomeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_gnsi_credentialz_credentialz_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GlomeResponse.ProtoReflect.Descriptor instead.
func (*GlomeResponse) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_gnsi_credentialz_credentialz_proto_rawDescGZIP(), []int{21}
}

type GenerateKeysRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	KeyParams     []KeyGen               `protobuf:"varint,1,rep,packed,name=key_params,json=keyParams,proto3,enum=gnsi.credentialz.v1.KeyGen" json:"key_params,omitempty"`
	Version       string                 `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	CreatedOn     uint64                 `protobuf:"varint,3,opt,name=created_on,json=createdOn,proto3" json:"created_on,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GenerateKeysRequest) Reset() {
	*x = GenerateKeysRequest{}
	mi := &file_github_com_openconfig_gnsi_credentialz_credentialz_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GenerateKeysRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateKeysRequest) ProtoMessage() {}

func (x *GenerateKeysRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_gnsi_credentialz_credentialz_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateKeysRequest.ProtoReflect.Descriptor instead.
func (*GenerateKeysRequest) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_gnsi_credentialz_credentialz_proto_rawDescGZIP(), []int{22}
}

func (x *GenerateKeysRequest) GetKeyParams() []KeyGen {
	if x != nil {
		return x.KeyParams
	}
	return nil
}

func (x *GenerateKeysRequest) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *GenerateKeysRequest) GetCreatedOn() uint64 {
	if x != nil {
		return x.CreatedOn
	}
	return 0
}

type GenerateKeysResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PublicKeys    []*PublicKey           `protobuf:"bytes,1,rep,name=public_keys,json=publicKeys,proto3" json:"public_keys,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GenerateKeysResponse) Reset() {
	*x = GenerateKeysResponse{}
	mi := &file_github_com_openconfig_gnsi_credentialz_credentialz_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GenerateKeysResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateKeysResponse) ProtoMessage() {}

func (x *GenerateKeysResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_gnsi_credentialz_credentialz_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateKeysResponse.ProtoReflect.Descriptor instead.
func (*GenerateKeysResponse) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_gnsi_credentialz_credentialz_proto_rawDescGZIP(), []int{23}
}

func (x *GenerateKeysResponse) GetPublicKeys() []*PublicKey {
	if x != nil {
		return x.PublicKeys
	}
	return nil
}

type AllowedAuthenticationRequest struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	AuthenticationTypes []AuthenticationType   `protobuf:"varint,1,rep,packed,name=authentication_types,json=authenticationTypes,proto3,enum=gnsi.credentialz.v1.AuthenticationType" json:"authentication_types,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *AllowedAuthenticationRequest) Reset() {
	*x = AllowedAuthenticationRequest{}
	mi := &file_github_com_openconfig_gnsi_credentialz_credentialz_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AllowedAuthenticationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllowedAuthenticationRequest) ProtoMessage() {}

func (x *AllowedAuthenticationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_gnsi_credentialz_credentialz_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllowedAuthenticationRequest.ProtoReflect.Descriptor instead.
func (*AllowedAuthenticationRequest) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_gnsi_credentialz_credentialz_proto_rawDescGZIP(), []int{24}
}

func (x *AllowedAuthenticationRequest) GetAuthenticationTypes() []AuthenticationType {
	if x != nil {
		return x.AuthenticationTypes
	}
	return nil
}

type AllowedAuthenticationResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AllowedAuthenticationResponse) Reset() {
	*x = AllowedAuthenticationResponse{}
	mi := &file_github_com_openconfig_gnsi_credentialz_credentialz_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AllowedAuthenticationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllowedAuthenticationResponse) ProtoMessage() {}

func (x *AllowedAuthenticationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_gnsi_credentialz_credentialz_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllowedAuthenticationResponse.ProtoReflect.Descriptor instead.
func (*AllowedAuthenticationResponse) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_gnsi_credentialz_credentialz_proto_rawDescGZIP(), []int{25}
}

type ServerKeysRequest struct {
	state         protoimpl.MessageState                       `protogen:"open.v1"`
	AuthArtifacts []*ServerKeysRequest_AuthenticationArtifacts `protobuf:"bytes,1,rep,name=auth_artifacts,json=authArtifacts,proto3" json:"auth_artifacts,omitempty"`
	Version       string                                       `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	CreatedOn     uint64                                       `protobuf:"varint,3,opt,name=created_on,json=createdOn,proto3" json:"created_on,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ServerKeysRequest) Reset() {
	*x = ServerKeysRequest{}
	mi := &file_github_com_openconfig_gnsi_credentialz_credentialz_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ServerKeysRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerKeysRequest) ProtoMessage() {}

func (x *ServerKeysRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_gnsi_credentialz_credentialz_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerKeysRequest.ProtoReflect.Descriptor instead.
func (*ServerKeysRequest) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_gnsi_credentialz_credentialz_proto_rawDescGZIP(), []int{26}
}

func (x *ServerKeysRequest) GetAuthArtifacts() []*ServerKeysRequest_AuthenticationArtifacts {
	if x != nil {
		return x.AuthArtifacts
	}
	return nil
}

func (x *ServerKeysRequest) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *ServerKeysRequest) GetCreatedOn() uint64 {
	if x != nil {
		return x.CreatedOn
	}
	return 0
}

type ServerKeysResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ServerKeysResponse) Reset() {
	*x = ServerKeysResponse{}
	mi := &file_github_com_openconfig_gnsi_credentialz_credentialz_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ServerKeysResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerKeysResponse) ProtoMessage() {}

func (x *ServerKeysResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_gnsi_credentialz_credentialz_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerKeysResponse.ProtoReflect.Descriptor instead.
func (*ServerKeysResponse) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_gnsi_credentialz_credentialz_proto_rawDescGZIP(), []int{27}
}

type FinalizeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FinalizeRequest) Reset() {
	*x = FinalizeRequest{}
	mi := &file_github_com_openconfig_gnsi_credentialz_credentialz_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FinalizeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FinalizeRequest) ProtoMessage() {}

func (x *FinalizeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_gnsi_credentialz_credentialz_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FinalizeRequest.ProtoReflect.Descriptor instead.
func (*FinalizeRequest) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_gnsi_credentialz_credentialz_proto_rawDescGZIP(), []int{28}
}

type GetPublicKeysRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPublicKeysRequest) Reset() {
	*x = GetPublicKeysRequest{}
	mi := &file_github_com_openconfig_gnsi_credentialz_credentialz_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPublicKeysRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPublicKeysRequest) ProtoMessage() {}

func (x *GetPublicKeysRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_gnsi_credentialz_credentialz_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPublicKeysRequest.ProtoReflect.Descriptor instead.
func (*GetPublicKeysRequest) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_gnsi_credentialz_credentialz_proto_rawDescGZIP(), []int{29}
}

type GetPublicKeysResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PublicKeys    []*PublicKey           `protobuf:"bytes,1,rep,name=public_keys,json=publicKeys,proto3" json:"public_keys,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPublicKeysResponse) Reset() {
	*x = GetPublicKeysResponse{}
	mi := &file_github_com_openconfig_gnsi_credentialz_credentialz_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPublicKeysResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPublicKeysResponse) ProtoMessage() {}

func (x *GetPublicKeysResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_gnsi_credentialz_credentialz_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPublicKeysResponse.ProtoReflect.Descriptor instead.
func (*GetPublicKeysResponse) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_gnsi_credentialz_credentialz_proto_rawDescGZIP(), []int{30}
}

func (x *GetPublicKeysResponse) GetPublicKeys() []*PublicKey {
	if x != nil {
		return x.PublicKeys
	}
	return nil
}

type AccountCredentials_AuthorizedKey struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AuthorizedKey []byte                 `protobuf:"bytes,1,opt,name=authorized_key,json=authorizedKey,proto3" json:"authorized_key,omitempty"`
	Options       []*Option              `protobuf:"bytes,2,rep,name=options,proto3" json:"options,omitempty"`
	KeyType       KeyType                `protobuf:"varint,3,opt,name=key_type,json=keyType,proto3,enum=gnsi.credentialz.v1.KeyType" json:"key_type,omitempty"`
	Description   string                 `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AccountCredentials_AuthorizedKey) Reset() {
	*x = AccountCredentials_AuthorizedKey{}
	mi := &file_github_com_openconfig_gnsi_credentialz_credentialz_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AccountCredentials_AuthorizedKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountCredentials_AuthorizedKey) ProtoMessage() {}

func (x *AccountCredentials_AuthorizedKey) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_gnsi_credentialz_credentialz_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountCredentials_AuthorizedKey.ProtoReflect.Descriptor instead.
func (*AccountCredentials_AuthorizedKey) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_gnsi_credentialz_credentialz_proto_rawDescGZIP(), []int{4, 0}
}

func (x *AccountCredentials_AuthorizedKey) GetAuthorizedKey() []byte {
	if x != nil {
		return x.AuthorizedKey
	}
	return nil
}

func (x *AccountCredentials_AuthorizedKey) GetOptions() []*Option {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *AccountCredentials_AuthorizedKey) GetKeyType() KeyType {
	if x != nil {
		return x.KeyType
	}
	return KeyType_KEY_TYPE_UNSPECIFIED
}

func (x *AccountCredentials_AuthorizedKey) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type UserPolicy_SshAuthorizedPrincipals struct {
	state                protoimpl.MessageState               `protogen:"open.v1"`
	AuthorizedPrincipals []*UserPolicy_SshAuthorizedPrincipal `protobuf:"bytes,2,rep,name=authorized_principals,json=authorizedPrincipals,proto3" json:"authorized_principals,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *UserPolicy_SshAuthorizedPrincipals) Reset() {
	*x = UserPolicy_SshAuthorizedPrincipals{}
	mi := &file_github_com_openconfig_gnsi_credentialz_credentialz_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserPolicy_SshAuthorizedPrincipals) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserPolicy_SshAuthorizedPrincipals) ProtoMessage() {}

func (x *UserPolicy_SshAuthorizedPrincipals) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_gnsi_credentialz_credentialz_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserPolicy_SshAuthorizedPrincipals.ProtoReflect.Descriptor instead.
func (*UserPolicy_SshAuthorizedPrincipals) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_gnsi_credentialz_credentialz_proto_rawDescGZIP(), []int{7, 0}
}

func (x *UserPolicy_SshAuthorizedPrincipals) GetAuthorizedPrincipals() []*UserPolicy_SshAuthorizedPrincipal {
	if x != nil {
		return x.AuthorizedPrincipals
	}
	return nil
}

type UserPolicy_SshAuthorizedPrincipal struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	AuthorizedUser string                 `protobuf:"bytes,1,opt,name=authorized_user,json=authorizedUser,proto3" json:"authorized_user,omitempty"`
	Options        []*Option              `protobuf:"bytes,2,rep,name=options,proto3" json:"options,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *UserPolicy_SshAuthorizedPrincipal) Reset() {
	*x = UserPolicy_SshAuthorizedPrincipal{}
	mi := &file_github_com_openconfig_gnsi_credentialz_credentialz_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserPolicy_SshAuthorizedPrincipal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserPolicy_SshAuthorizedPrincipal) ProtoMessage() {}

func (x *UserPolicy_SshAuthorizedPrincipal) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_gnsi_credentialz_credentialz_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserPolicy_SshAuthorizedPrincipal.ProtoReflect.Descriptor instead.
func (*UserPolicy_SshAuthorizedPrincipal) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_gnsi_credentialz_credentialz_proto_rawDescGZIP(), []int{7, 1}
}

func (x *UserPolicy_SshAuthorizedPrincipal) GetAuthorizedUser() string {
	if x != nil {
		return x.AuthorizedUser
	}
	return ""
}

func (x *UserPolicy_SshAuthorizedPrincipal) GetOptions() []*Option {
	if x != nil {
		return x.Options
	}
	return nil
}

type PasswordRequest_CryptoHash struct {
	state         protoimpl.MessageState              `protogen:"open.v1"`
	HashType      PasswordRequest_CryptoHash_HashType `protobuf:"varint,1,opt,name=hash_type,json=hashType,proto3,enum=gnsi.credentialz.v1.PasswordRequest_CryptoHash_HashType" json:"hash_type,omitempty"`
	HashValue     string                              `protobuf:"bytes,2,opt,name=hash_value,json=hashValue,proto3" json:"hash_value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PasswordRequest_CryptoHash) Reset() {
	*x = PasswordRequest_CryptoHash{}
	mi := &file_github_com_openconfig_gnsi_credentialz_credentialz_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PasswordRequest_CryptoHash) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PasswordRequest_CryptoHash) ProtoMessage() {}

func (x *PasswordRequest_CryptoHash) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_gnsi_credentialz_credentialz_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PasswordRequest_CryptoHash.ProtoReflect.Descriptor instead.
func (*PasswordRequest_CryptoHash) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_gnsi_credentialz_credentialz_proto_rawDescGZIP(), []int{9, 0}
}

func (x *PasswordRequest_CryptoHash) GetHashType() PasswordRequest_CryptoHash_HashType {
	if x != nil {
		return x.HashType
	}
	return PasswordRequest_CryptoHash_HASH_TYPE_UNSPECIFIED
}

func (x *PasswordRequest_CryptoHash) GetHashValue() string {
	if x != nil {
		return x.HashValue
	}
	return ""
}

type PasswordRequest_Password struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Value:
	//
	//	*PasswordRequest_Password_Plaintext
	//	*PasswordRequest_Password_CryptoHash
	Value         isPasswordRequest_Password_Value `protobuf_oneof:"value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PasswordRequest_Password) Reset() {
	*x = PasswordRequest_Password{}
	mi := &file_github_com_openconfig_gnsi_credentialz_credentialz_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PasswordRequest_Password) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PasswordRequest_Password) ProtoMessage() {}

func (x *PasswordRequest_Password) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_gnsi_credentialz_credentialz_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PasswordRequest_Password.ProtoReflect.Descriptor instead.
func (*PasswordRequest_Password) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_gnsi_credentialz_credentialz_proto_rawDescGZIP(), []int{9, 1}
}

func (x *PasswordRequest_Password) GetValue() isPasswordRequest_Password_Value {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *PasswordRequest_Password) GetPlaintext() string {
	if x != nil {
		if x, ok := x.Value.(*PasswordRequest_Password_Plaintext); ok {
			return x.Plaintext
		}
	}
	return ""
}

func (x *PasswordRequest_Password) GetCryptoHash() *PasswordRequest_CryptoHash {
	if x != nil {
		if x, ok := x.Value.(*PasswordRequest_Password_CryptoHash); ok {
			return x.CryptoHash
		}
	}
	return nil
}

type isPasswordRequest_Password_Value interface {
	isPasswordRequest_Password_Value()
}

type PasswordRequest_Password_Plaintext struct {
	Plaintext string `protobuf:"bytes,1,opt,name=plaintext,proto3,oneof"`
}

type PasswordRequest_Password_CryptoHash struct {
	CryptoHash *PasswordRequest_CryptoHash `protobuf:"bytes,2,opt,name=crypto_hash,json=cryptoHash,proto3,oneof"`
}

func (*PasswordRequest_Password_Plaintext) isPasswordRequest_Password_Value() {}

func (*PasswordRequest_Password_CryptoHash) isPasswordRequest_Password_Value() {}

type PasswordRequest_Account struct {
	state         protoimpl.MessageState    `protogen:"open.v1"`
	Account       string                    `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
	Password      *PasswordRequest_Password `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	Version       string                    `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
	CreatedOn     uint64                    `protobuf:"varint,4,opt,name=created_on,json=createdOn,proto3" json:"created_on,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PasswordRequest_Account) Reset() {
	*x = PasswordRequest_Account{}
	mi := &file_github_com_openconfig_gnsi_credentialz_credentialz_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PasswordRequest_Account) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PasswordRequest_Account) ProtoMessage() {}

func (x *PasswordRequest_Account) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_gnsi_credentialz_credentialz_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PasswordRequest_Account.ProtoReflect.Descriptor instead.
func (*PasswordRequest_Account) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_gnsi_credentialz_credentialz_proto_rawDescGZIP(), []int{9, 2}
}

func (x *PasswordRequest_Account) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *PasswordRequest_Account) GetPassword() *PasswordRequest_Password {
	if x != nil {
		return x.Password
	}
	return nil
}

func (x *PasswordRequest_Account) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *PasswordRequest_Account) GetCreatedOn() uint64 {
	if x != nil {
		return x.CreatedOn
	}
	return 0
}

type ServerKeysRequest_AuthenticationArtifacts struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PrivateKey    []byte                 `protobuf:"bytes,1,opt,name=private_key,json=privateKey,proto3" json:"private_key,omitempty"`
	Certificate   []byte                 `protobuf:"bytes,2,opt,name=certificate,proto3" json:"certificate,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ServerKeysRequest_AuthenticationArtifacts) Reset() {
	*x = ServerKeysRequest_AuthenticationArtifacts{}
	mi := &file_github_com_openconfig_gnsi_credentialz_credentialz_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ServerKeysRequest_AuthenticationArtifacts) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerKeysRequest_AuthenticationArtifacts) ProtoMessage() {}

func (x *ServerKeysRequest_AuthenticationArtifacts) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_gnsi_credentialz_credentialz_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerKeysRequest_AuthenticationArtifacts.ProtoReflect.Descriptor instead.
func (*ServerKeysRequest_AuthenticationArtifacts) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_gnsi_credentialz_credentialz_proto_rawDescGZIP(), []int{26, 0}
}

func (x *ServerKeysRequest_AuthenticationArtifacts) GetPrivateKey() []byte {
	if x != nil {
		return x.PrivateKey
	}
	return nil
}

func (x *ServerKeysRequest_AuthenticationArtifacts) GetCertificate() []byte {
	if x != nil {
		return x.Certificate
	}
	return nil
}

var File_github_com_openconfig_gnsi_credentialz_credentialz_proto protoreflect.FileDescriptor

const file_github_com_openconfig_gnsi_credentialz_credentialz_proto_rawDesc = "" +
	"\n" +
	"8github.com/openconfig/gnsi/credentialz/credentialz.proto\x12\x13gnsi.credentialz.v1\"\xee\x02\n" +
	"\x1fRotateAccountCredentialsRequest\x12L\n" +
	"\n" +
	"credential\x18\x01 \x01(\v2*.gnsi.credentialz.v1.AuthorizedKeysRequestH\x00R\n" +
	"credential\x12A\n" +
	"\x04user\x18\x02 \x01(\v2+.gnsi.credentialz.v1.AuthorizedUsersRequestH\x00R\x04user\x12B\n" +
	"\bpassword\x18\x03 \x01(\v2$.gnsi.credentialz.v1.PasswordRequestH\x00R\bpassword\x12B\n" +
	"\bfinalize\x18\x04 \x01(\v2$.gnsi.credentialz.v1.FinalizeRequestH\x00R\bfinalize\x12'\n" +
	"\x0fforce_overwrite\x18\x05 \x01(\bR\x0eforceOverwriteB\t\n" +
	"\arequest\"\x86\x02\n" +
	" RotateAccountCredentialsResponse\x12M\n" +
	"\n" +
	"credential\x18\x01 \x01(\v2+.gnsi.credentialz.v1.AuthorizedKeysResponseH\x00R\n" +
	"credential\x12B\n" +
	"\x04user\x18\x02 \x01(\v2,.gnsi.credentialz.v1.AuthorizedUsersResponseH\x00R\x04user\x12C\n" +
	"\bpassword\x18\x03 \x01(\v2%.gnsi.credentialz.v1.PasswordResponseH\x00R\bpasswordB\n" +
	"\n" +
	"\bresponse\"b\n" +
	"\x15AuthorizedKeysRequest\x12I\n" +
	"\vcredentials\x18\x01 \x03(\v2'.gnsi.credentialz.v1.AccountCredentialsR\vcredentials\"\x8b\a\n" +
	"\x06Option\x12\x14\n" +
	"\x04name\x18\x01 \x01(\tH\x00R\x04name\x12<\n" +
	"\x02id\x18\x02 \x01(\x0e2*.gnsi.credentialz.v1.Option.StandardOptionH\x00R\x02id\x12\x14\n" +
	"\x05value\x18\x03 \x01(\tR\x05value\"\x8f\x06\n" +
	"\x0eStandardOption\x12\x1f\n" +
	"\x1bSTANDARD_OPTION_UNSPECIFIED\x10\x00\x12$\n" +
	" STANDARD_OPTION_AGENT_FORWARDING\x10\x01\x12\"\n" +
	"\x1eSTANDARD_OPTION_CERT_AUTHORITY\x10\x02\x12\x1b\n" +
	"\x17STANDARD_OPTION_COMMAND\x10\x03\x12\x1f\n" +
	"\x1bSTANDARD_OPTION_ENVIRONMENT\x10\x04\x12\x1f\n" +
	"\x1bSTANDARD_OPTION_EXPIRY_TIME\x10\x05\x12\x18\n" +
	"\x14STANDARD_OPTION_FROM\x10\x06\x12'\n" +
	"#STANDARD_OPTION_NO_AGENT_FORWARDING\x10\a\x12&\n" +
	"\"STANDARD_OPTION_NO_PORT_FORWARDING\x10\b\x12\x1a\n" +
	"\x16STANDARD_OPTION_NO_PTY\x10\t\x12\x1e\n" +
	"\x1aSTANDARD_OPTION_NO_USER_RC\x10\n" +
	"\x12%\n" +
	"!STANDARD_OPTION_NO_X11_FORWARDING\x10\v\x12 \n" +
	"\x1cSTANDARD_OPTION_PERMITLISTEN\x10\f\x12\x1e\n" +
	"\x1aSTANDARD_OPTION_PERMITOPEN\x10\r\x12#\n" +
	"\x1fSTANDARD_OPTION_PORT_FORWARDING\x10\x0e\x12\x1e\n" +
	"\x1aSTANDARD_OPTION_PRINCIPALS\x10\x0f\x12\x17\n" +
	"\x13STANDARD_OPTION_PTY\x10\x10\x12%\n" +
	"!STANDARD_OPTION_NO_TOUCH_REQUIRED\x10\x11\x12#\n" +
	"\x1fSTANDARD_OPTION_VERIFY_REQUIRED\x10\x12\x12\x1c\n" +
	"\x18STANDARD_OPTION_RESTRICT\x10\x13\x12\x1a\n" +
	"\x16STANDARD_OPTION_TUNNEL\x10\x14\x12\x1b\n" +
	"\x17STANDARD_OPTION_USER_RC\x10\x15\x12\"\n" +
	"\x1eSTANDARD_OPTION_X11_FORWARDING\x10\x16B\x05\n" +
	"\x03key\"\x92\x03\n" +
	"\x12AccountCredentials\x12\x18\n" +
	"\aaccount\x18\x01 \x01(\tR\aaccount\x12^\n" +
	"\x0fauthorized_keys\x18\x02 \x03(\v25.gnsi.credentialz.v1.AccountCredentials.AuthorizedKeyR\x0eauthorizedKeys\x12\x18\n" +
	"\aversion\x18\x03 \x01(\tR\aversion\x12\x1d\n" +
	"\n" +
	"created_on\x18\x04 \x01(\x04R\tcreatedOn\x1a\xc8\x01\n" +
	"\rAuthorizedKey\x12%\n" +
	"\x0eauthorized_key\x18\x01 \x01(\fR\rauthorizedKey\x125\n" +
	"\aoptions\x18\x02 \x03(\v2\x1b.gnsi.credentialz.v1.OptionR\aoptions\x127\n" +
	"\bkey_type\x18\x03 \x01(\x0e2\x1c.gnsi.credentialz.v1.KeyTypeR\akeyType\x12 \n" +
	"\vdescription\x18\x04 \x01(\tR\vdescription\"\x18\n" +
	"\x16AuthorizedKeysResponse\"U\n" +
	"\x16AuthorizedUsersRequest\x12;\n" +
	"\bpolicies\x18\x01 \x03(\v2\x1f.gnsi.credentialz.v1.UserPolicyR\bpolicies\"\xd0\x03\n" +
	"\n" +
	"UserPolicy\x12\x18\n" +
	"\aaccount\x18\x01 \x01(\tR\aaccount\x12l\n" +
	"\x15authorized_principals\x18\x02 \x01(\v27.gnsi.credentialz.v1.UserPolicy.SshAuthorizedPrincipalsR\x14authorizedPrincipals\x12\x18\n" +
	"\aversion\x18\x04 \x01(\tR\aversion\x12\x1d\n" +
	"\n" +
	"created_on\x18\x05 \x01(\x04R\tcreatedOn\x1a\x86\x01\n" +
	"\x17SshAuthorizedPrincipals\x12k\n" +
	"\x15authorized_principals\x18\x02 \x03(\v26.gnsi.credentialz.v1.UserPolicy.SshAuthorizedPrincipalR\x14authorizedPrincipals\x1ax\n" +
	"\x16SshAuthorizedPrincipal\x12'\n" +
	"\x0fauthorized_user\x18\x01 \x01(\tR\x0eauthorizedUser\x125\n" +
	"\aoptions\x18\x02 \x03(\v2\x1b.gnsi.credentialz.v1.OptionR\aoptions\"\x19\n" +
	"\x17AuthorizedUsersResponse\"\xf3\x04\n" +
	"\x0fPasswordRequest\x12H\n" +
	"\baccounts\x18\x01 \x03(\v2,.gnsi.credentialz.v1.PasswordRequest.AccountR\baccounts\x1a\xe1\x01\n" +
	"\n" +
	"CryptoHash\x12U\n" +
	"\thash_type\x18\x01 \x01(\x0e28.gnsi.credentialz.v1.PasswordRequest.CryptoHash.HashTypeR\bhashType\x12\x1d\n" +
	"\n" +
	"hash_value\x18\x02 \x01(\tR\thashValue\"]\n" +
	"\bHashType\x12\x19\n" +
	"\x15HASH_TYPE_UNSPECIFIED\x10\x00\x12\x17\n" +
	"\x13HASH_TYPE_CRYPT_MD5\x10\x01\x12\x1d\n" +
	"\x19HASH_TYPE_CRYPT_SHA_2_512\x10\x02\x1a\x87\x01\n" +
	"\bPassword\x12\x1e\n" +
	"\tplaintext\x18\x01 \x01(\tH\x00R\tplaintext\x12R\n" +
	"\vcrypto_hash\x18\x02 \x01(\v2/.gnsi.credentialz.v1.PasswordRequest.CryptoHashH\x00R\n" +
	"cryptoHashB\a\n" +
	"\x05value\x1a\xa7\x01\n" +
	"\aAccount\x12\x18\n" +
	"\aaccount\x18\x01 \x01(\tR\aaccount\x12I\n" +
	"\bpassword\x18\x02 \x01(\v2-.gnsi.credentialz.v1.PasswordRequest.PasswordR\bpassword\x12\x18\n" +
	"\aversion\x18\x03 \x01(\tR\aversion\x12\x1d\n" +
	"\n" +
	"created_on\x18\x04 \x01(\x04R\tcreatedOn\"\x12\n" +
	"\x10PasswordResponse\"\xfb\x04\n" +
	"\x1bRotateHostParametersRequest\x12T\n" +
	"\x11ssh_ca_public_key\x18\x01 \x01(\v2'.gnsi.credentialz.v1.CaPublicKeyRequestH\x00R\x0esshCaPublicKey\x12I\n" +
	"\vserver_keys\x18\x02 \x01(\v2&.gnsi.credentialz.v1.ServerKeysRequestH\x00R\n" +
	"serverKeys\x12B\n" +
	"\bfinalize\x18\x03 \x01(\v2$.gnsi.credentialz.v1.FinalizeRequestH\x00R\bfinalize\x12O\n" +
	"\rgenerate_keys\x18\x04 \x01(\v2(.gnsi.credentialz.v1.GenerateKeysRequestH\x00R\fgenerateKeys\x12j\n" +
	"\x16authentication_allowed\x18\x05 \x01(\v21.gnsi.credentialz.v1.AllowedAuthenticationRequestH\x00R\x15authenticationAllowed\x12t\n" +
	"\x1aauthorized_principal_check\x18\x06 \x01(\v24.gnsi.credentialz.v1.AuthorizedPrincipalCheckRequestH\x00R\x18authorizedPrincipalCheck\x129\n" +
	"\x05glome\x18\a \x01(\v2!.gnsi.credentialz.v1.GlomeRequestH\x00R\x05glomeB\t\n" +
	"\arequest\"\xbf\x04\n" +
	"\x1cRotateHostParametersResponse\x12U\n" +
	"\x11ssh_ca_public_key\x18\x01 \x01(\v2(.gnsi.credentialz.v1.CaPublicKeyResponseH\x00R\x0esshCaPublicKey\x12J\n" +
	"\vserver_keys\x18\x02 \x01(\v2'.gnsi.credentialz.v1.ServerKeysResponseH\x00R\n" +
	"serverKeys\x12P\n" +
	"\rgenerate_keys\x18\x03 \x01(\v2).gnsi.credentialz.v1.GenerateKeysResponseH\x00R\fgenerateKeys\x12k\n" +
	"\x16authentication_allowed\x18\x04 \x01(\v22.gnsi.credentialz.v1.AllowedAuthenticationResponseH\x00R\x15authenticationAllowed\x12u\n" +
	"\x1aauthorized_principal_check\x18\x05 \x01(\v25.gnsi.credentialz.v1.AuthorizedPrincipalCheckResponseH\x00R\x18authorizedPrincipalCheck\x12:\n" +
	"\x05glome\x18\x06 \x01(\v2\".gnsi.credentialz.v1.GlomeResponseH\x00R\x05glomeB\n" +
	"\n" +
	"\bresponse\"S\n" +
	"\x15CanGenerateKeyRequest\x12:\n" +
	"\n" +
	"key_params\x18\x01 \x01(\x0e2\x1b.gnsi.credentialz.v1.KeyGenR\tkeyParams\";\n" +
	"\x16CanGenerateKeyResponse\x12!\n" +
	"\fcan_generate\x18\x01 \x01(\bR\vcanGenerate\"\x85\x01\n" +
	"\tPublicKey\x12\x1d\n" +
	"\n" +
	"public_key\x18\x01 \x01(\fR\tpublicKey\x127\n" +
	"\bkey_type\x18\x02 \x01(\x0e2\x1c.gnsi.credentialz.v1.KeyTypeR\akeyType\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\"\x9a\x01\n" +
	"\x12CaPublicKeyRequest\x12K\n" +
	"\x12ssh_ca_public_keys\x18\x01 \x03(\v2\x1e.gnsi.credentialz.v1.PublicKeyR\x0fsshCaPublicKeys\x12\x18\n" +
	"\aversion\x18\x02 \x01(\tR\aversion\x12\x1d\n" +
	"\n" +
	"created_on\x18\x03 \x01(\x04R\tcreatedOn\"\x15\n" +
	"\x13CaPublicKeyResponse\"\xa5\x01\n" +
	"\x1fAuthorizedPrincipalCheckRequest\x12M\n" +
	"\x04tool\x18\x01 \x01(\x0e29.gnsi.credentialz.v1.AuthorizedPrincipalCheckRequest.ToolR\x04tool\"3\n" +
	"\x04Tool\x12\x14\n" +
	"\x10TOOL_UNSPECIFIED\x10\x00\x12\x15\n" +
	"\x11TOOL_HIBA_DEFAULT\x10\x01\"\"\n" +
	" AuthorizedPrincipalCheckResponse\"z\n" +
	"\fGlomeRequest\x12\x18\n" +
	"\aenabled\x18\x01 \x01(\bR\aenabled\x12\x10\n" +
	"\x03key\x18\x02 \x01(\tR\x03key\x12\x1f\n" +
	"\vkey_version\x18\x03 \x01(\x05R\n" +
	"keyVersion\x12\x1d\n" +
	"\n" +
	"url_prefix\x18\x04 \x01(\tR\turlPrefix\"\x0f\n" +
	"\rGlomeResponse\"\x8a\x01\n" +
	"\x13GenerateKeysRequest\x12:\n" +
	"\n" +
	"key_params\x18\x01 \x03(\x0e2\x1b.gnsi.credentialz.v1.KeyGenR\tkeyParams\x12\x18\n" +
	"\aversion\x18\x02 \x01(\tR\aversion\x12\x1d\n" +
	"\n" +
	"created_on\x18\x03 \x01(\x04R\tcreatedOn\"W\n" +
	"\x14GenerateKeysResponse\x12?\n" +
	"\vpublic_keys\x18\x01 \x03(\v2\x1e.gnsi.credentialz.v1.PublicKeyR\n" +
	"publicKeys\"z\n" +
	"\x1cAllowedAuthenticationRequest\x12Z\n" +
	"\x14authentication_types\x18\x01 \x03(\x0e2'.gnsi.credentialz.v1.AuthenticationTypeR\x13authenticationTypes\"\x1f\n" +
	"\x1dAllowedAuthenticationResponse\"\x91\x02\n" +
	"\x11ServerKeysRequest\x12e\n" +
	"\x0eauth_artifacts\x18\x01 \x03(\v2>.gnsi.credentialz.v1.ServerKeysRequest.AuthenticationArtifactsR\rauthArtifacts\x12\x18\n" +
	"\aversion\x18\x02 \x01(\tR\aversion\x12\x1d\n" +
	"\n" +
	"created_on\x18\x03 \x01(\x04R\tcreatedOn\x1a\\\n" +
	"\x17AuthenticationArtifacts\x12\x1f\n" +
	"\vprivate_key\x18\x01 \x01(\fR\n" +
	"privateKey\x12 \n" +
	"\vcertificate\x18\x02 \x01(\fR\vcertificate\"\x14\n" +
	"\x12ServerKeysResponse\"\x11\n" +
	"\x0fFinalizeRequest\"\x16\n" +
	"\x14GetPublicKeysRequest\"X\n" +
	"\x15GetPublicKeysResponse\x12?\n" +
	"\vpublic_keys\x18\x01 \x03(\v2\x1e.gnsi.credentialz.v1.PublicKeyR\n" +
	"publicKeys*\xcc\x01\n" +
	"\aKeyType\x12\x18\n" +
	"\x14KEY_TYPE_UNSPECIFIED\x10\x00\x12\x18\n" +
	"\x14KEY_TYPE_ECDSA_P_256\x10\x01\x12\x18\n" +
	"\x14KEY_TYPE_ECDSA_P_521\x10\x02\x12\x14\n" +
	"\x10KEY_TYPE_ED25519\x10\x03\x12\x15\n" +
	"\x11KEY_TYPE_RSA_2048\x10\x04\x12\x15\n" +
	"\x11KEY_TYPE_RSA_4096\x10\x05\x12\x15\n" +
	"\x11KEY_TYPE_RSA_3072\x10\x06\x12\x18\n" +
	"\x14KEY_TYPE_ECDSA_P_384\x10\a*\xac\x02\n" +
	"\x06KeyGen\x12\x1f\n" +
	"\x1bKEY_GEN_SSH_KEY_UNSPECIFIED\x10\x00\x12!\n" +
	"\x1dKEY_GEN_SSH_KEY_TYPE_RSA_2048\x10\x01\x12$\n" +
	" KEY_GEN_SSH_KEY_TYPE_ECDSA_P_256\x10\x02\x12$\n" +
	" KEY_GEN_SSH_KEY_TYPE_ECDSA_P_521\x10\x03\x12&\n" +
	"\"KEY_GEN_SSH_KEY_TYPE_EDDSA_ED25519\x10\x04\x12!\n" +
	"\x1dKEY_GEN_SSH_KEY_TYPE_RSA_4096\x10\x05\x12!\n" +
	"\x1dKEY_GEN_SSH_KEY_TYPE_RSA_3072\x10\x06\x12$\n" +
	" KEY_GEN_SSH_KEY_TYPE_ECDSA_P_384\x10\a*\xa3\x01\n" +
	"\x12AuthenticationType\x12#\n" +
	"\x1fAUTHENTICATION_TYPE_UNSPECIFIED\x10\x00\x12 \n" +
	"\x1cAUTHENTICATION_TYPE_PASSWORD\x10\x01\x12\x1e\n" +
	"\x1aAUTHENTICATION_TYPE_PUBKEY\x10\x02\x12&\n" +
	"\"AUTHENTICATION_TYPE_KBDINTERACTIVE\x10\x032\xf2\x03\n" +
	"\vCredentialz\x12\x8b\x01\n" +
	"\x18RotateAccountCredentials\x124.gnsi.credentialz.v1.RotateAccountCredentialsRequest\x1a5.gnsi.credentialz.v1.RotateAccountCredentialsResponse(\x010\x01\x12\x81\x01\n" +
	"\x14RotateHostParameters\x120.gnsi.credentialz.v1.RotateHostParametersRequest\x1a1.gnsi.credentialz.v1.RotateHostParametersResponse\"\x00(\x010\x01\x12i\n" +
	"\x0eCanGenerateKey\x12*.gnsi.credentialz.v1.CanGenerateKeyRequest\x1a+.gnsi.credentialz.v1.CanGenerateKeyResponse\x12f\n" +
	"\rGetPublicKeys\x12).gnsi.credentialz.v1.GetPublicKeysRequest\x1a*.gnsi.credentialz.v1.GetPublicKeysResponseB(Z&github.com/openconfig/gnsi/credentialzb\x06proto3"

var (
	file_github_com_openconfig_gnsi_credentialz_credentialz_proto_rawDescOnce sync.Once
	file_github_com_openconfig_gnsi_credentialz_credentialz_proto_rawDescData []byte
)

func file_github_com_openconfig_gnsi_credentialz_credentialz_proto_rawDescGZIP() []byte {
	file_github_com_openconfig_gnsi_credentialz_credentialz_proto_rawDescOnce.Do(func() {
		file_github_com_openconfig_gnsi_credentialz_credentialz_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_github_com_openconfig_gnsi_credentialz_credentialz_proto_rawDesc), len(file_github_com_openconfig_gnsi_credentialz_credentialz_proto_rawDesc)))
	})
	return file_github_com_openconfig_gnsi_credentialz_credentialz_proto_rawDescData
}

var file_github_com_openconfig_gnsi_credentialz_credentialz_proto_enumTypes = make([]protoimpl.EnumInfo, 6)
var file_github_com_openconfig_gnsi_credentialz_credentialz_proto_msgTypes = make([]protoimpl.MessageInfo, 38)
var file_github_com_openconfig_gnsi_credentialz_credentialz_proto_goTypes = []any{
	(KeyType)(0),                                      // 0: gnsi.credentialz.v1.KeyType
	(KeyGen)(0),                                       // 1: gnsi.credentialz.v1.KeyGen
	(AuthenticationType)(0),                           // 2: gnsi.credentialz.v1.AuthenticationType
	(Option_StandardOption)(0),                        // 3: gnsi.credentialz.v1.Option.StandardOption
	(PasswordRequest_CryptoHash_HashType)(0),          // 4: gnsi.credentialz.v1.PasswordRequest.CryptoHash.HashType
	(AuthorizedPrincipalCheckRequest_Tool)(0),         // 5: gnsi.credentialz.v1.AuthorizedPrincipalCheckRequest.Tool
	(*RotateAccountCredentialsRequest)(nil),           // 6: gnsi.credentialz.v1.RotateAccountCredentialsRequest
	(*RotateAccountCredentialsResponse)(nil),          // 7: gnsi.credentialz.v1.RotateAccountCredentialsResponse
	(*AuthorizedKeysRequest)(nil),                     // 8: gnsi.credentialz.v1.AuthorizedKeysRequest
	(*Option)(nil),                                    // 9: gnsi.credentialz.v1.Option
	(*AccountCredentials)(nil),                        // 10: gnsi.credentialz.v1.AccountCredentials
	(*AuthorizedKeysResponse)(nil),                    // 11: gnsi.credentialz.v1.AuthorizedKeysResponse
	(*AuthorizedUsersRequest)(nil),                    // 12: gnsi.credentialz.v1.AuthorizedUsersRequest
	(*UserPolicy)(nil),                                // 13: gnsi.credentialz.v1.UserPolicy
	(*AuthorizedUsersResponse)(nil),                   // 14: gnsi.credentialz.v1.AuthorizedUsersResponse
	(*PasswordRequest)(nil),                           // 15: gnsi.credentialz.v1.PasswordRequest
	(*PasswordResponse)(nil),                          // 16: gnsi.credentialz.v1.PasswordResponse
	(*RotateHostParametersRequest)(nil),               // 17: gnsi.credentialz.v1.RotateHostParametersRequest
	(*RotateHostParametersResponse)(nil),              // 18: gnsi.credentialz.v1.RotateHostParametersResponse
	(*CanGenerateKeyRequest)(nil),                     // 19: gnsi.credentialz.v1.CanGenerateKeyRequest
	(*CanGenerateKeyResponse)(nil),                    // 20: gnsi.credentialz.v1.CanGenerateKeyResponse
	(*PublicKey)(nil),                                 // 21: gnsi.credentialz.v1.PublicKey
	(*CaPublicKeyRequest)(nil),                        // 22: gnsi.credentialz.v1.CaPublicKeyRequest
	(*CaPublicKeyResponse)(nil),                       // 23: gnsi.credentialz.v1.CaPublicKeyResponse
	(*AuthorizedPrincipalCheckRequest)(nil),           // 24: gnsi.credentialz.v1.AuthorizedPrincipalCheckRequest
	(*AuthorizedPrincipalCheckResponse)(nil),          // 25: gnsi.credentialz.v1.AuthorizedPrincipalCheckResponse
	(*GlomeRequest)(nil),                              // 26: gnsi.credentialz.v1.GlomeRequest
	(*GlomeResponse)(nil),                             // 27: gnsi.credentialz.v1.GlomeResponse
	(*GenerateKeysRequest)(nil),                       // 28: gnsi.credentialz.v1.GenerateKeysRequest
	(*GenerateKeysResponse)(nil),                      // 29: gnsi.credentialz.v1.GenerateKeysResponse
	(*AllowedAuthenticationRequest)(nil),              // 30: gnsi.credentialz.v1.AllowedAuthenticationRequest
	(*AllowedAuthenticationResponse)(nil),             // 31: gnsi.credentialz.v1.AllowedAuthenticationResponse
	(*ServerKeysRequest)(nil),                         // 32: gnsi.credentialz.v1.ServerKeysRequest
	(*ServerKeysResponse)(nil),                        // 33: gnsi.credentialz.v1.ServerKeysResponse
	(*FinalizeRequest)(nil),                           // 34: gnsi.credentialz.v1.FinalizeRequest
	(*GetPublicKeysRequest)(nil),                      // 35: gnsi.credentialz.v1.GetPublicKeysRequest
	(*GetPublicKeysResponse)(nil),                     // 36: gnsi.credentialz.v1.GetPublicKeysResponse
	(*AccountCredentials_AuthorizedKey)(nil),          // 37: gnsi.credentialz.v1.AccountCredentials.AuthorizedKey
	(*UserPolicy_SshAuthorizedPrincipals)(nil),        // 38: gnsi.credentialz.v1.UserPolicy.SshAuthorizedPrincipals
	(*UserPolicy_SshAuthorizedPrincipal)(nil),         // 39: gnsi.credentialz.v1.UserPolicy.SshAuthorizedPrincipal
	(*PasswordRequest_CryptoHash)(nil),                // 40: gnsi.credentialz.v1.PasswordRequest.CryptoHash
	(*PasswordRequest_Password)(nil),                  // 41: gnsi.credentialz.v1.PasswordRequest.Password
	(*PasswordRequest_Account)(nil),                   // 42: gnsi.credentialz.v1.PasswordRequest.Account
	(*ServerKeysRequest_AuthenticationArtifacts)(nil), // 43: gnsi.credentialz.v1.ServerKeysRequest.AuthenticationArtifacts
}
var file_github_com_openconfig_gnsi_credentialz_credentialz_proto_depIdxs = []int32{
	8,  // 0: gnsi.credentialz.v1.RotateAccountCredentialsRequest.credential:type_name -> gnsi.credentialz.v1.AuthorizedKeysRequest
	12, // 1: gnsi.credentialz.v1.RotateAccountCredentialsRequest.user:type_name -> gnsi.credentialz.v1.AuthorizedUsersRequest
	15, // 2: gnsi.credentialz.v1.RotateAccountCredentialsRequest.password:type_name -> gnsi.credentialz.v1.PasswordRequest
	34, // 3: gnsi.credentialz.v1.RotateAccountCredentialsRequest.finalize:type_name -> gnsi.credentialz.v1.FinalizeRequest
	11, // 4: gnsi.credentialz.v1.RotateAccountCredentialsResponse.credential:type_name -> gnsi.credentialz.v1.AuthorizedKeysResponse
	14, // 5: gnsi.credentialz.v1.RotateAccountCredentialsResponse.user:type_name -> gnsi.credentialz.v1.AuthorizedUsersResponse
	16, // 6: gnsi.credentialz.v1.RotateAccountCredentialsResponse.password:type_name -> gnsi.credentialz.v1.PasswordResponse
	10, // 7: gnsi.credentialz.v1.AuthorizedKeysRequest.credentials:type_name -> gnsi.credentialz.v1.AccountCredentials
	3,  // 8: gnsi.credentialz.v1.Option.id:type_name -> gnsi.credentialz.v1.Option.StandardOption
	37, // 9: gnsi.credentialz.v1.AccountCredentials.authorized_keys:type_name -> gnsi.credentialz.v1.AccountCredentials.AuthorizedKey
	13, // 10: gnsi.credentialz.v1.AuthorizedUsersRequest.policies:type_name -> gnsi.credentialz.v1.UserPolicy
	38, // 11: gnsi.credentialz.v1.UserPolicy.authorized_principals:type_name -> gnsi.credentialz.v1.UserPolicy.SshAuthorizedPrincipals
	42, // 12: gnsi.credentialz.v1.PasswordRequest.accounts:type_name -> gnsi.credentialz.v1.PasswordRequest.Account
	22, // 13: gnsi.credentialz.v1.RotateHostParametersRequest.ssh_ca_public_key:type_name -> gnsi.credentialz.v1.CaPublicKeyRequest
	32, // 14: gnsi.credentialz.v1.RotateHostParametersRequest.server_keys:type_name -> gnsi.credentialz.v1.ServerKeysRequest
	34, // 15: gnsi.credentialz.v1.RotateHostParametersRequest.finalize:type_name -> gnsi.credentialz.v1.FinalizeRequest
	28, // 16: gnsi.credentialz.v1.RotateHostParametersRequest.generate_keys:type_name -> gnsi.credentialz.v1.GenerateKeysRequest
	30, // 17: gnsi.credentialz.v1.RotateHostParametersRequest.authentication_allowed:type_name -> gnsi.credentialz.v1.AllowedAuthenticationRequest
	24, // 18: gnsi.credentialz.v1.RotateHostParametersRequest.authorized_principal_check:type_name -> gnsi.credentialz.v1.AuthorizedPrincipalCheckRequest
	26, // 19: gnsi.credentialz.v1.RotateHostParametersRequest.glome:type_name -> gnsi.credentialz.v1.GlomeRequest
	23, // 20: gnsi.credentialz.v1.RotateHostParametersResponse.ssh_ca_public_key:type_name -> gnsi.credentialz.v1.CaPublicKeyResponse
	33, // 21: gnsi.credentialz.v1.RotateHostParametersResponse.server_keys:type_name -> gnsi.credentialz.v1.ServerKeysResponse
	29, // 22: gnsi.credentialz.v1.RotateHostParametersResponse.generate_keys:type_name -> gnsi.credentialz.v1.GenerateKeysResponse
	31, // 23: gnsi.credentialz.v1.RotateHostParametersResponse.authentication_allowed:type_name -> gnsi.credentialz.v1.AllowedAuthenticationResponse
	25, // 24: gnsi.credentialz.v1.RotateHostParametersResponse.authorized_principal_check:type_name -> gnsi.credentialz.v1.AuthorizedPrincipalCheckResponse
	27, // 25: gnsi.credentialz.v1.RotateHostParametersResponse.glome:type_name -> gnsi.credentialz.v1.GlomeResponse
	1,  // 26: gnsi.credentialz.v1.CanGenerateKeyRequest.key_params:type_name -> gnsi.credentialz.v1.KeyGen
	0,  // 27: gnsi.credentialz.v1.PublicKey.key_type:type_name -> gnsi.credentialz.v1.KeyType
	21, // 28: gnsi.credentialz.v1.CaPublicKeyRequest.ssh_ca_public_keys:type_name -> gnsi.credentialz.v1.PublicKey
	5,  // 29: gnsi.credentialz.v1.AuthorizedPrincipalCheckRequest.tool:type_name -> gnsi.credentialz.v1.AuthorizedPrincipalCheckRequest.Tool
	1,  // 30: gnsi.credentialz.v1.GenerateKeysRequest.key_params:type_name -> gnsi.credentialz.v1.KeyGen
	21, // 31: gnsi.credentialz.v1.GenerateKeysResponse.public_keys:type_name -> gnsi.credentialz.v1.PublicKey
	2,  // 32: gnsi.credentialz.v1.AllowedAuthenticationRequest.authentication_types:type_name -> gnsi.credentialz.v1.AuthenticationType
	43, // 33: gnsi.credentialz.v1.ServerKeysRequest.auth_artifacts:type_name -> gnsi.credentialz.v1.ServerKeysRequest.AuthenticationArtifacts
	21, // 34: gnsi.credentialz.v1.GetPublicKeysResponse.public_keys:type_name -> gnsi.credentialz.v1.PublicKey
	9,  // 35: gnsi.credentialz.v1.AccountCredentials.AuthorizedKey.options:type_name -> gnsi.credentialz.v1.Option
	0,  // 36: gnsi.credentialz.v1.AccountCredentials.AuthorizedKey.key_type:type_name -> gnsi.credentialz.v1.KeyType
	39, // 37: gnsi.credentialz.v1.UserPolicy.SshAuthorizedPrincipals.authorized_principals:type_name -> gnsi.credentialz.v1.UserPolicy.SshAuthorizedPrincipal
	9,  // 38: gnsi.credentialz.v1.UserPolicy.SshAuthorizedPrincipal.options:type_name -> gnsi.credentialz.v1.Option
	4,  // 39: gnsi.credentialz.v1.PasswordRequest.CryptoHash.hash_type:type_name -> gnsi.credentialz.v1.PasswordRequest.CryptoHash.HashType
	40, // 40: gnsi.credentialz.v1.PasswordRequest.Password.crypto_hash:type_name -> gnsi.credentialz.v1.PasswordRequest.CryptoHash
	41, // 41: gnsi.credentialz.v1.PasswordRequest.Account.password:type_name -> gnsi.credentialz.v1.PasswordRequest.Password
	6,  // 42: gnsi.credentialz.v1.Credentialz.RotateAccountCredentials:input_type -> gnsi.credentialz.v1.RotateAccountCredentialsRequest
	17, // 43: gnsi.credentialz.v1.Credentialz.RotateHostParameters:input_type -> gnsi.credentialz.v1.RotateHostParametersRequest
	19, // 44: gnsi.credentialz.v1.Credentialz.CanGenerateKey:input_type -> gnsi.credentialz.v1.CanGenerateKeyRequest
	35, // 45: gnsi.credentialz.v1.Credentialz.GetPublicKeys:input_type -> gnsi.credentialz.v1.GetPublicKeysRequest
	7,  // 46: gnsi.credentialz.v1.Credentialz.RotateAccountCredentials:output_type -> gnsi.credentialz.v1.RotateAccountCredentialsResponse
	18, // 47: gnsi.credentialz.v1.Credentialz.RotateHostParameters:output_type -> gnsi.credentialz.v1.RotateHostParametersResponse
	20, // 48: gnsi.credentialz.v1.Credentialz.CanGenerateKey:output_type -> gnsi.credentialz.v1.CanGenerateKeyResponse
	36, // 49: gnsi.credentialz.v1.Credentialz.GetPublicKeys:output_type -> gnsi.credentialz.v1.GetPublicKeysResponse
	46, // [46:50] is the sub-list for method output_type
	42, // [42:46] is the sub-list for method input_type
	42, // [42:42] is the sub-list for extension type_name
	42, // [42:42] is the sub-list for extension extendee
	0,  // [0:42] is the sub-list for field type_name
}

func init() { file_github_com_openconfig_gnsi_credentialz_credentialz_proto_init() }
func file_github_com_openconfig_gnsi_credentialz_credentialz_proto_init() {
	if File_github_com_openconfig_gnsi_credentialz_credentialz_proto != nil {
		return
	}
	file_github_com_openconfig_gnsi_credentialz_credentialz_proto_msgTypes[0].OneofWrappers = []any{
		(*RotateAccountCredentialsRequest_Credential)(nil),
		(*RotateAccountCredentialsRequest_User)(nil),
		(*RotateAccountCredentialsRequest_Password)(nil),
		(*RotateAccountCredentialsRequest_Finalize)(nil),
	}
	file_github_com_openconfig_gnsi_credentialz_credentialz_proto_msgTypes[1].OneofWrappers = []any{
		(*RotateAccountCredentialsResponse_Credential)(nil),
		(*RotateAccountCredentialsResponse_User)(nil),
		(*RotateAccountCredentialsResponse_Password)(nil),
	}
	file_github_com_openconfig_gnsi_credentialz_credentialz_proto_msgTypes[3].OneofWrappers = []any{
		(*Option_Name)(nil),
		(*Option_Id)(nil),
	}
	file_github_com_openconfig_gnsi_credentialz_credentialz_proto_msgTypes[11].OneofWrappers = []any{
		(*RotateHostParametersRequest_SshCaPublicKey)(nil),
		(*RotateHostParametersRequest_ServerKeys)(nil),
		(*RotateHostParametersRequest_Finalize)(nil),
		(*RotateHostParametersRequest_GenerateKeys)(nil),
		(*RotateHostParametersRequest_AuthenticationAllowed)(nil),
		(*RotateHostParametersRequest_AuthorizedPrincipalCheck)(nil),
		(*RotateHostParametersRequest_Glome)(nil),
	}
	file_github_com_openconfig_gnsi_credentialz_credentialz_proto_msgTypes[12].OneofWrappers = []any{
		(*RotateHostParametersResponse_SshCaPublicKey)(nil),
		(*RotateHostParametersResponse_ServerKeys)(nil),
		(*RotateHostParametersResponse_GenerateKeys)(nil),
		(*RotateHostParametersResponse_AuthenticationAllowed)(nil),
		(*RotateHostParametersResponse_AuthorizedPrincipalCheck)(nil),
		(*RotateHostParametersResponse_Glome)(nil),
	}
	file_github_com_openconfig_gnsi_credentialz_credentialz_proto_msgTypes[35].OneofWrappers = []any{
		(*PasswordRequest_Password_Plaintext)(nil),
		(*PasswordRequest_Password_CryptoHash)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_github_com_openconfig_gnsi_credentialz_credentialz_proto_rawDesc), len(file_github_com_openconfig_gnsi_credentialz_credentialz_proto_rawDesc)),
			NumEnums:      6,
			NumMessages:   38,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_github_com_openconfig_gnsi_credentialz_credentialz_proto_goTypes,
		DependencyIndexes: file_github_com_openconfig_gnsi_credentialz_credentialz_proto_depIdxs,
		EnumInfos:         file_github_com_openconfig_gnsi_credentialz_credentialz_proto_enumTypes,
		MessageInfos:      file_github_com_openconfig_gnsi_credentialz_credentialz_proto_msgTypes,
	}.Build()
	File_github_com_openconfig_gnsi_credentialz_credentialz_proto = out.File
	file_github_com_openconfig_gnsi_credentialz_credentialz_proto_goTypes = nil
	file_github_com_openconfig_gnsi_credentialz_credentialz_proto_depIdxs = nil
}
