// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.31.1
// source: github.com/openconfig/gnsi/pathz/pathz.proto

package pathz

import (
	gnmi "github.com/openconfig/gnmi/proto/gnmi"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PolicyInstance int32

const (
	PolicyInstance_POLICY_INSTANCE_UNSPECIFIED PolicyInstance = 0
	PolicyInstance_POLICY_INSTANCE_ACTIVE      PolicyInstance = 1
	PolicyInstance_POLICY_INSTANCE_SANDBOX     PolicyInstance = 2
)

// Enum value maps for PolicyInstance.
var (
	PolicyInstance_name = map[int32]string{
		0: "POLICY_INSTANCE_UNSPECIFIED",
		1: "POLICY_INSTANCE_ACTIVE",
		2: "POLICY_INSTANCE_SANDBOX",
	}
	PolicyInstance_value = map[string]int32{
		"POLICY_INSTANCE_UNSPECIFIED": 0,
		"POLICY_INSTANCE_ACTIVE":      1,
		"POLICY_INSTANCE_SANDBOX":     2,
	}
)

func (x PolicyInstance) Enum() *PolicyInstance {
	p := new(PolicyInstance)
	*p = x
	return p
}

func (x PolicyInstance) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PolicyInstance) Descriptor() protoreflect.EnumDescriptor {
	return file_github_com_openconfig_gnsi_pathz_pathz_proto_enumTypes[0].Descriptor()
}

func (PolicyInstance) Type() protoreflect.EnumType {
	return &file_github_com_openconfig_gnsi_pathz_pathz_proto_enumTypes[0]
}

func (x PolicyInstance) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PolicyInstance.Descriptor instead.
func (PolicyInstance) EnumDescriptor() ([]byte, []int) {
	return file_github_com_openconfig_gnsi_pathz_pathz_proto_rawDescGZIP(), []int{0}
}

type Action int32

const (
	Action_ACTION_UNSPECIFIED Action = 0
	Action_ACTION_DENY        Action = 1
	Action_ACTION_PERMIT      Action = 2
)

// Enum value maps for Action.
var (
	Action_name = map[int32]string{
		0: "ACTION_UNSPECIFIED",
		1: "ACTION_DENY",
		2: "ACTION_PERMIT",
	}
	Action_value = map[string]int32{
		"ACTION_UNSPECIFIED": 0,
		"ACTION_DENY":        1,
		"ACTION_PERMIT":      2,
	}
)

func (x Action) Enum() *Action {
	p := new(Action)
	*p = x
	return p
}

func (x Action) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Action) Descriptor() protoreflect.EnumDescriptor {
	return file_github_com_openconfig_gnsi_pathz_pathz_proto_enumTypes[1].Descriptor()
}

func (Action) Type() protoreflect.EnumType {
	return &file_github_com_openconfig_gnsi_pathz_pathz_proto_enumTypes[1]
}

func (x Action) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Action.Descriptor instead.
func (Action) EnumDescriptor() ([]byte, []int) {
	return file_github_com_openconfig_gnsi_pathz_pathz_proto_rawDescGZIP(), []int{1}
}

type Mode int32

const (
	Mode_MODE_UNSPECIFIED Mode = 0
	Mode_MODE_READ        Mode = 1
	Mode_MODE_WRITE       Mode = 2
)

// Enum value maps for Mode.
var (
	Mode_name = map[int32]string{
		0: "MODE_UNSPECIFIED",
		1: "MODE_READ",
		2: "MODE_WRITE",
	}
	Mode_value = map[string]int32{
		"MODE_UNSPECIFIED": 0,
		"MODE_READ":        1,
		"MODE_WRITE":       2,
	}
)

func (x Mode) Enum() *Mode {
	p := new(Mode)
	*p = x
	return p
}

func (x Mode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Mode) Descriptor() protoreflect.EnumDescriptor {
	return file_github_com_openconfig_gnsi_pathz_pathz_proto_enumTypes[2].Descriptor()
}

func (Mode) Type() protoreflect.EnumType {
	return &file_github_com_openconfig_gnsi_pathz_pathz_proto_enumTypes[2]
}

func (x Mode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Mode.Descriptor instead.
func (Mode) EnumDescriptor() ([]byte, []int) {
	return file_github_com_openconfig_gnsi_pathz_pathz_proto_rawDescGZIP(), []int{2}
}

type RotateRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to RotateRequest:
	//
	//	*RotateRequest_UploadRequest
	//	*RotateRequest_FinalizeRotation
	RotateRequest  isRotateRequest_RotateRequest `protobuf_oneof:"rotate_request"`
	ForceOverwrite bool                          `protobuf:"varint,3,opt,name=force_overwrite,json=forceOverwrite,proto3" json:"force_overwrite,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *RotateRequest) Reset() {
	*x = RotateRequest{}
	mi := &file_github_com_openconfig_gnsi_pathz_pathz_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RotateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RotateRequest) ProtoMessage() {}

func (x *RotateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_gnsi_pathz_pathz_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RotateRequest.ProtoReflect.Descriptor instead.
func (*RotateRequest) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_gnsi_pathz_pathz_proto_rawDescGZIP(), []int{0}
}

func (x *RotateRequest) GetRotateRequest() isRotateRequest_RotateRequest {
	if x != nil {
		return x.RotateRequest
	}
	return nil
}

func (x *RotateRequest) GetUploadRequest() *UploadRequest {
	if x != nil {
		if x, ok := x.RotateRequest.(*RotateRequest_UploadRequest); ok {
			return x.UploadRequest
		}
	}
	return nil
}

func (x *RotateRequest) GetFinalizeRotation() *FinalizeRequest {
	if x != nil {
		if x, ok := x.RotateRequest.(*RotateRequest_FinalizeRotation); ok {
			return x.FinalizeRotation
		}
	}
	return nil
}

func (x *RotateRequest) GetForceOverwrite() bool {
	if x != nil {
		return x.ForceOverwrite
	}
	return false
}

type isRotateRequest_RotateRequest interface {
	isRotateRequest_RotateRequest()
}

type RotateRequest_UploadRequest struct {
	UploadRequest *UploadRequest `protobuf:"bytes,1,opt,name=upload_request,json=uploadRequest,proto3,oneof"`
}

type RotateRequest_FinalizeRotation struct {
	FinalizeRotation *FinalizeRequest `protobuf:"bytes,2,opt,name=finalize_rotation,json=finalizeRotation,proto3,oneof"`
}

func (*RotateRequest_UploadRequest) isRotateRequest_RotateRequest() {}

func (*RotateRequest_FinalizeRotation) isRotateRequest_RotateRequest() {}

type RotateResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Response:
	//
	//	*RotateResponse_Upload
	Response      isRotateResponse_Response `protobuf_oneof:"response"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RotateResponse) Reset() {
	*x = RotateResponse{}
	mi := &file_github_com_openconfig_gnsi_pathz_pathz_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RotateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RotateResponse) ProtoMessage() {}

func (x *RotateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_gnsi_pathz_pathz_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RotateResponse.ProtoReflect.Descriptor instead.
func (*RotateResponse) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_gnsi_pathz_pathz_proto_rawDescGZIP(), []int{1}
}

func (x *RotateResponse) GetResponse() isRotateResponse_Response {
	if x != nil {
		return x.Response
	}
	return nil
}

func (x *RotateResponse) GetUpload() *UploadResponse {
	if x != nil {
		if x, ok := x.Response.(*RotateResponse_Upload); ok {
			return x.Upload
		}
	}
	return nil
}

type isRotateResponse_Response interface {
	isRotateResponse_Response()
}

type RotateResponse_Upload struct {
	Upload *UploadResponse `protobuf:"bytes,1,opt,name=upload,proto3,oneof"`
}

func (*RotateResponse_Upload) isRotateResponse_Response() {}

type FinalizeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FinalizeRequest) Reset() {
	*x = FinalizeRequest{}
	mi := &file_github_com_openconfig_gnsi_pathz_pathz_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FinalizeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FinalizeRequest) ProtoMessage() {}

func (x *FinalizeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_gnsi_pathz_pathz_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FinalizeRequest.ProtoReflect.Descriptor instead.
func (*FinalizeRequest) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_gnsi_pathz_pathz_proto_rawDescGZIP(), []int{2}
}

type UploadRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Version       string                 `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	CreatedOn     uint64                 `protobuf:"varint,2,opt,name=created_on,json=createdOn,proto3" json:"created_on,omitempty"`
	Policy        *AuthorizationPolicy   `protobuf:"bytes,3,opt,name=policy,proto3" json:"policy,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadRequest) Reset() {
	*x = UploadRequest{}
	mi := &file_github_com_openconfig_gnsi_pathz_pathz_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadRequest) ProtoMessage() {}

func (x *UploadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_gnsi_pathz_pathz_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadRequest.ProtoReflect.Descriptor instead.
func (*UploadRequest) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_gnsi_pathz_pathz_proto_rawDescGZIP(), []int{3}
}

func (x *UploadRequest) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *UploadRequest) GetCreatedOn() uint64 {
	if x != nil {
		return x.CreatedOn
	}
	return 0
}

func (x *UploadRequest) GetPolicy() *AuthorizationPolicy {
	if x != nil {
		return x.Policy
	}
	return nil
}

type UploadResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadResponse) Reset() {
	*x = UploadResponse{}
	mi := &file_github_com_openconfig_gnsi_pathz_pathz_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadResponse) ProtoMessage() {}

func (x *UploadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_gnsi_pathz_pathz_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadResponse.ProtoReflect.Descriptor instead.
func (*UploadResponse) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_gnsi_pathz_pathz_proto_rawDescGZIP(), []int{4}
}

type ProbeRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	User           string                 `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	Path           *gnmi.Path             `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	Mode           Mode                   `protobuf:"varint,3,opt,name=mode,proto3,enum=gnsi.pathz.v1.Mode" json:"mode,omitempty"`
	PolicyInstance PolicyInstance         `protobuf:"varint,4,opt,name=policy_instance,json=policyInstance,proto3,enum=gnsi.pathz.v1.PolicyInstance" json:"policy_instance,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ProbeRequest) Reset() {
	*x = ProbeRequest{}
	mi := &file_github_com_openconfig_gnsi_pathz_pathz_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProbeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProbeRequest) ProtoMessage() {}

func (x *ProbeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_gnsi_pathz_pathz_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProbeRequest.ProtoReflect.Descriptor instead.
func (*ProbeRequest) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_gnsi_pathz_pathz_proto_rawDescGZIP(), []int{5}
}

func (x *ProbeRequest) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *ProbeRequest) GetPath() *gnmi.Path {
	if x != nil {
		return x.Path
	}
	return nil
}

func (x *ProbeRequest) GetMode() Mode {
	if x != nil {
		return x.Mode
	}
	return Mode_MODE_UNSPECIFIED
}

func (x *ProbeRequest) GetPolicyInstance() PolicyInstance {
	if x != nil {
		return x.PolicyInstance
	}
	return PolicyInstance_POLICY_INSTANCE_UNSPECIFIED
}

type ProbeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Action        Action                 `protobuf:"varint,1,opt,name=action,proto3,enum=gnsi.pathz.v1.Action" json:"action,omitempty"`
	Version       string                 `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProbeResponse) Reset() {
	*x = ProbeResponse{}
	mi := &file_github_com_openconfig_gnsi_pathz_pathz_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProbeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProbeResponse) ProtoMessage() {}

func (x *ProbeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_gnsi_pathz_pathz_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProbeResponse.ProtoReflect.Descriptor instead.
func (*ProbeResponse) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_gnsi_pathz_pathz_proto_rawDescGZIP(), []int{6}
}

func (x *ProbeResponse) GetAction() Action {
	if x != nil {
		return x.Action
	}
	return Action_ACTION_UNSPECIFIED
}

func (x *ProbeResponse) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

type GetRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	PolicyInstance PolicyInstance         `protobuf:"varint,1,opt,name=policy_instance,json=policyInstance,proto3,enum=gnsi.pathz.v1.PolicyInstance" json:"policy_instance,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GetRequest) Reset() {
	*x = GetRequest{}
	mi := &file_github_com_openconfig_gnsi_pathz_pathz_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRequest) ProtoMessage() {}

func (x *GetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_gnsi_pathz_pathz_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRequest.ProtoReflect.Descriptor instead.
func (*GetRequest) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_gnsi_pathz_pathz_proto_rawDescGZIP(), []int{7}
}

func (x *GetRequest) GetPolicyInstance() PolicyInstance {
	if x != nil {
		return x.PolicyInstance
	}
	return PolicyInstance_POLICY_INSTANCE_UNSPECIFIED
}

type GetResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Version       string                 `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	CreatedOn     uint64                 `protobuf:"varint,2,opt,name=created_on,json=createdOn,proto3" json:"created_on,omitempty"`
	Policy        *AuthorizationPolicy   `protobuf:"bytes,3,opt,name=policy,proto3" json:"policy,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetResponse) Reset() {
	*x = GetResponse{}
	mi := &file_github_com_openconfig_gnsi_pathz_pathz_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetResponse) ProtoMessage() {}

func (x *GetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_gnsi_pathz_pathz_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetResponse.ProtoReflect.Descriptor instead.
func (*GetResponse) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_gnsi_pathz_pathz_proto_rawDescGZIP(), []int{8}
}

func (x *GetResponse) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *GetResponse) GetCreatedOn() uint64 {
	if x != nil {
		return x.CreatedOn
	}
	return 0
}

func (x *GetResponse) GetPolicy() *AuthorizationPolicy {
	if x != nil {
		return x.Policy
	}
	return nil
}

type User struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *User) Reset() {
	*x = User{}
	mi := &file_github_com_openconfig_gnsi_pathz_pathz_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_gnsi_pathz_pathz_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_gnsi_pathz_pathz_proto_rawDescGZIP(), []int{9}
}

func (x *User) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type Group struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Users         []*User                `protobuf:"bytes,2,rep,name=users,proto3" json:"users,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Group) Reset() {
	*x = Group{}
	mi := &file_github_com_openconfig_gnsi_pathz_pathz_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Group) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Group) ProtoMessage() {}

func (x *Group) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_gnsi_pathz_pathz_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Group.ProtoReflect.Descriptor instead.
func (*Group) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_gnsi_pathz_pathz_proto_rawDescGZIP(), []int{10}
}

func (x *Group) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Group) GetUsers() []*User {
	if x != nil {
		return x.Users
	}
	return nil
}

type AuthorizationRule struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Id    string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Types that are valid to be assigned to Principal:
	//
	//	*AuthorizationRule_User
	//	*AuthorizationRule_Group
	Principal     isAuthorizationRule_Principal `protobuf_oneof:"principal"`
	Path          *gnmi.Path                    `protobuf:"bytes,4,opt,name=path,proto3" json:"path,omitempty"`
	Action        Action                        `protobuf:"varint,5,opt,name=action,proto3,enum=gnsi.pathz.v1.Action" json:"action,omitempty"`
	Mode          Mode                          `protobuf:"varint,6,opt,name=mode,proto3,enum=gnsi.pathz.v1.Mode" json:"mode,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AuthorizationRule) Reset() {
	*x = AuthorizationRule{}
	mi := &file_github_com_openconfig_gnsi_pathz_pathz_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AuthorizationRule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthorizationRule) ProtoMessage() {}

func (x *AuthorizationRule) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_gnsi_pathz_pathz_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthorizationRule.ProtoReflect.Descriptor instead.
func (*AuthorizationRule) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_gnsi_pathz_pathz_proto_rawDescGZIP(), []int{11}
}

func (x *AuthorizationRule) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AuthorizationRule) GetPrincipal() isAuthorizationRule_Principal {
	if x != nil {
		return x.Principal
	}
	return nil
}

func (x *AuthorizationRule) GetUser() string {
	if x != nil {
		if x, ok := x.Principal.(*AuthorizationRule_User); ok {
			return x.User
		}
	}
	return ""
}

func (x *AuthorizationRule) GetGroup() string {
	if x != nil {
		if x, ok := x.Principal.(*AuthorizationRule_Group); ok {
			return x.Group
		}
	}
	return ""
}

func (x *AuthorizationRule) GetPath() *gnmi.Path {
	if x != nil {
		return x.Path
	}
	return nil
}

func (x *AuthorizationRule) GetAction() Action {
	if x != nil {
		return x.Action
	}
	return Action_ACTION_UNSPECIFIED
}

func (x *AuthorizationRule) GetMode() Mode {
	if x != nil {
		return x.Mode
	}
	return Mode_MODE_UNSPECIFIED
}

type isAuthorizationRule_Principal interface {
	isAuthorizationRule_Principal()
}

type AuthorizationRule_User struct {
	User string `protobuf:"bytes,2,opt,name=user,proto3,oneof"`
}

type AuthorizationRule_Group struct {
	Group string `protobuf:"bytes,3,opt,name=group,proto3,oneof"`
}

func (*AuthorizationRule_User) isAuthorizationRule_Principal() {}

func (*AuthorizationRule_Group) isAuthorizationRule_Principal() {}

type AuthorizationPolicy struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Rules         []*AuthorizationRule   `protobuf:"bytes,1,rep,name=rules,proto3" json:"rules,omitempty"`
	Groups        []*Group               `protobuf:"bytes,2,rep,name=groups,proto3" json:"groups,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AuthorizationPolicy) Reset() {
	*x = AuthorizationPolicy{}
	mi := &file_github_com_openconfig_gnsi_pathz_pathz_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AuthorizationPolicy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthorizationPolicy) ProtoMessage() {}

func (x *AuthorizationPolicy) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_gnsi_pathz_pathz_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthorizationPolicy.ProtoReflect.Descriptor instead.
func (*AuthorizationPolicy) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_gnsi_pathz_pathz_proto_rawDescGZIP(), []int{12}
}

func (x *AuthorizationPolicy) GetRules() []*AuthorizationRule {
	if x != nil {
		return x.Rules
	}
	return nil
}

func (x *AuthorizationPolicy) GetGroups() []*Group {
	if x != nil {
		return x.Groups
	}
	return nil
}

var File_github_com_openconfig_gnsi_pathz_pathz_proto protoreflect.FileDescriptor

const file_github_com_openconfig_gnsi_pathz_pathz_proto_rawDesc = "" +
	"\n" +
	",github.com/openconfig/gnsi/pathz/pathz.proto\x12\rgnsi.pathz.v1\x1a0github.com/openconfig/gnmi/proto/gnmi/gnmi.proto\"\xe0\x01\n" +
	"\rRotateRequest\x12E\n" +
	"\x0eupload_request\x18\x01 \x01(\v2\x1c.gnsi.pathz.v1.UploadRequestH\x00R\ruploadRequest\x12M\n" +
	"\x11finalize_rotation\x18\x02 \x01(\v2\x1e.gnsi.pathz.v1.FinalizeRequestH\x00R\x10finalizeRotation\x12'\n" +
	"\x0fforce_overwrite\x18\x03 \x01(\bR\x0eforceOverwriteB\x10\n" +
	"\x0erotate_request\"U\n" +
	"\x0eRotateResponse\x127\n" +
	"\x06upload\x18\x01 \x01(\v2\x1d.gnsi.pathz.v1.UploadResponseH\x00R\x06uploadB\n" +
	"\n" +
	"\bresponse\"\x11\n" +
	"\x0fFinalizeRequest\"\x84\x01\n" +
	"\rUploadRequest\x12\x18\n" +
	"\aversion\x18\x01 \x01(\tR\aversion\x12\x1d\n" +
	"\n" +
	"created_on\x18\x02 \x01(\x04R\tcreatedOn\x12:\n" +
	"\x06policy\x18\x03 \x01(\v2\".gnsi.pathz.v1.AuthorizationPolicyR\x06policy\"\x10\n" +
	"\x0eUploadResponse\"\xb3\x01\n" +
	"\fProbeRequest\x12\x12\n" +
	"\x04user\x18\x01 \x01(\tR\x04user\x12\x1e\n" +
	"\x04path\x18\x02 \x01(\v2\n" +
	".gnmi.PathR\x04path\x12'\n" +
	"\x04mode\x18\x03 \x01(\x0e2\x13.gnsi.pathz.v1.ModeR\x04mode\x12F\n" +
	"\x0fpolicy_instance\x18\x04 \x01(\x0e2\x1d.gnsi.pathz.v1.PolicyInstanceR\x0epolicyInstance\"X\n" +
	"\rProbeResponse\x12-\n" +
	"\x06action\x18\x01 \x01(\x0e2\x15.gnsi.pathz.v1.ActionR\x06action\x12\x18\n" +
	"\aversion\x18\x02 \x01(\tR\aversion\"T\n" +
	"\n" +
	"GetRequest\x12F\n" +
	"\x0fpolicy_instance\x18\x01 \x01(\x0e2\x1d.gnsi.pathz.v1.PolicyInstanceR\x0epolicyInstance\"\x82\x01\n" +
	"\vGetResponse\x12\x18\n" +
	"\aversion\x18\x01 \x01(\tR\aversion\x12\x1d\n" +
	"\n" +
	"created_on\x18\x02 \x01(\x04R\tcreatedOn\x12:\n" +
	"\x06policy\x18\x03 \x01(\v2\".gnsi.pathz.v1.AuthorizationPolicyR\x06policy\"\x1a\n" +
	"\x04User\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\"F\n" +
	"\x05Group\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12)\n" +
	"\x05users\x18\x02 \x03(\v2\x13.gnsi.pathz.v1.UserR\x05users\"\xd6\x01\n" +
	"\x11AuthorizationRule\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x14\n" +
	"\x04user\x18\x02 \x01(\tH\x00R\x04user\x12\x16\n" +
	"\x05group\x18\x03 \x01(\tH\x00R\x05group\x12\x1e\n" +
	"\x04path\x18\x04 \x01(\v2\n" +
	".gnmi.PathR\x04path\x12-\n" +
	"\x06action\x18\x05 \x01(\x0e2\x15.gnsi.pathz.v1.ActionR\x06action\x12'\n" +
	"\x04mode\x18\x06 \x01(\x0e2\x13.gnsi.pathz.v1.ModeR\x04modeB\v\n" +
	"\tprincipal\"{\n" +
	"\x13AuthorizationPolicy\x126\n" +
	"\x05rules\x18\x01 \x03(\v2 .gnsi.pathz.v1.AuthorizationRuleR\x05rules\x12,\n" +
	"\x06groups\x18\x02 \x03(\v2\x14.gnsi.pathz.v1.GroupR\x06groups*j\n" +
	"\x0ePolicyInstance\x12\x1f\n" +
	"\x1bPOLICY_INSTANCE_UNSPECIFIED\x10\x00\x12\x1a\n" +
	"\x16POLICY_INSTANCE_ACTIVE\x10\x01\x12\x1b\n" +
	"\x17POLICY_INSTANCE_SANDBOX\x10\x02*D\n" +
	"\x06Action\x12\x16\n" +
	"\x12ACTION_UNSPECIFIED\x10\x00\x12\x0f\n" +
	"\vACTION_DENY\x10\x01\x12\x11\n" +
	"\rACTION_PERMIT\x10\x02*;\n" +
	"\x04Mode\x12\x14\n" +
	"\x10MODE_UNSPECIFIED\x10\x00\x12\r\n" +
	"\tMODE_READ\x10\x01\x12\x0e\n" +
	"\n" +
	"MODE_WRITE\x10\x022\xd4\x01\n" +
	"\x05Pathz\x12I\n" +
	"\x06Rotate\x12\x1c.gnsi.pathz.v1.RotateRequest\x1a\x1d.gnsi.pathz.v1.RotateResponse(\x010\x01\x12B\n" +
	"\x05Probe\x12\x1b.gnsi.pathz.v1.ProbeRequest\x1a\x1c.gnsi.pathz.v1.ProbeResponse\x12<\n" +
	"\x03Get\x12\x19.gnsi.pathz.v1.GetRequest\x1a\x1a.gnsi.pathz.v1.GetResponseB\"Z github.com/openconfig/gnsi/pathzb\x06proto3"

var (
	file_github_com_openconfig_gnsi_pathz_pathz_proto_rawDescOnce sync.Once
	file_github_com_openconfig_gnsi_pathz_pathz_proto_rawDescData []byte
)

func file_github_com_openconfig_gnsi_pathz_pathz_proto_rawDescGZIP() []byte {
	file_github_com_openconfig_gnsi_pathz_pathz_proto_rawDescOnce.Do(func() {
		file_github_com_openconfig_gnsi_pathz_pathz_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_github_com_openconfig_gnsi_pathz_pathz_proto_rawDesc), len(file_github_com_openconfig_gnsi_pathz_pathz_proto_rawDesc)))
	})
	return file_github_com_openconfig_gnsi_pathz_pathz_proto_rawDescData
}

var file_github_com_openconfig_gnsi_pathz_pathz_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_github_com_openconfig_gnsi_pathz_pathz_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_github_com_openconfig_gnsi_pathz_pathz_proto_goTypes = []any{
	(PolicyInstance)(0),         // 0: gnsi.pathz.v1.PolicyInstance
	(Action)(0),                 // 1: gnsi.pathz.v1.Action
	(Mode)(0),                   // 2: gnsi.pathz.v1.Mode
	(*RotateRequest)(nil),       // 3: gnsi.pathz.v1.RotateRequest
	(*RotateResponse)(nil),      // 4: gnsi.pathz.v1.RotateResponse
	(*FinalizeRequest)(nil),     // 5: gnsi.pathz.v1.FinalizeRequest
	(*UploadRequest)(nil),       // 6: gnsi.pathz.v1.UploadRequest
	(*UploadResponse)(nil),      // 7: gnsi.pathz.v1.UploadResponse
	(*ProbeRequest)(nil),        // 8: gnsi.pathz.v1.ProbeRequest
	(*ProbeResponse)(nil),       // 9: gnsi.pathz.v1.ProbeResponse
	(*GetRequest)(nil),          // 10: gnsi.pathz.v1.GetRequest
	(*GetResponse)(nil),         // 11: gnsi.pathz.v1.GetResponse
	(*User)(nil),                // 12: gnsi.pathz.v1.User
	(*Group)(nil),               // 13: gnsi.pathz.v1.Group
	(*AuthorizationRule)(nil),   // 14: gnsi.pathz.v1.AuthorizationRule
	(*AuthorizationPolicy)(nil), // 15: gnsi.pathz.v1.AuthorizationPolicy
	(*gnmi.Path)(nil),           // 16: gnmi.Path
}
var file_github_com_openconfig_gnsi_pathz_pathz_proto_depIdxs = []int32{
	6,  // 0: gnsi.pathz.v1.RotateRequest.upload_request:type_name -> gnsi.pathz.v1.UploadRequest
	5,  // 1: gnsi.pathz.v1.RotateRequest.finalize_rotation:type_name -> gnsi.pathz.v1.FinalizeRequest
	7,  // 2: gnsi.pathz.v1.RotateResponse.upload:type_name -> gnsi.pathz.v1.UploadResponse
	15, // 3: gnsi.pathz.v1.UploadRequest.policy:type_name -> gnsi.pathz.v1.AuthorizationPolicy
	16, // 4: gnsi.pathz.v1.ProbeRequest.path:type_name -> gnmi.Path
	2,  // 5: gnsi.pathz.v1.ProbeRequest.mode:type_name -> gnsi.pathz.v1.Mode
	0,  // 6: gnsi.pathz.v1.ProbeRequest.policy_instance:type_name -> gnsi.pathz.v1.PolicyInstance
	1,  // 7: gnsi.pathz.v1.ProbeResponse.action:type_name -> gnsi.pathz.v1.Action
	0,  // 8: gnsi.pathz.v1.GetRequest.policy_instance:type_name -> gnsi.pathz.v1.PolicyInstance
	15, // 9: gnsi.pathz.v1.GetResponse.policy:type_name -> gnsi.pathz.v1.AuthorizationPolicy
	12, // 10: gnsi.pathz.v1.Group.users:type_name -> gnsi.pathz.v1.User
	16, // 11: gnsi.pathz.v1.AuthorizationRule.path:type_name -> gnmi.Path
	1,  // 12: gnsi.pathz.v1.AuthorizationRule.action:type_name -> gnsi.pathz.v1.Action
	2,  // 13: gnsi.pathz.v1.AuthorizationRule.mode:type_name -> gnsi.pathz.v1.Mode
	14, // 14: gnsi.pathz.v1.AuthorizationPolicy.rules:type_name -> gnsi.pathz.v1.AuthorizationRule
	13, // 15: gnsi.pathz.v1.AuthorizationPolicy.groups:type_name -> gnsi.pathz.v1.Group
	3,  // 16: gnsi.pathz.v1.Pathz.Rotate:input_type -> gnsi.pathz.v1.RotateRequest
	8,  // 17: gnsi.pathz.v1.Pathz.Probe:input_type -> gnsi.pathz.v1.ProbeRequest
	10, // 18: gnsi.pathz.v1.Pathz.Get:input_type -> gnsi.pathz.v1.GetRequest
	4,  // 19: gnsi.pathz.v1.Pathz.Rotate:output_type -> gnsi.pathz.v1.RotateResponse
	9,  // 20: gnsi.pathz.v1.Pathz.Probe:output_type -> gnsi.pathz.v1.ProbeResponse
	11, // 21: gnsi.pathz.v1.Pathz.Get:output_type -> gnsi.pathz.v1.GetResponse
	19, // [19:22] is the sub-list for method output_type
	16, // [16:19] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_github_com_openconfig_gnsi_pathz_pathz_proto_init() }
func file_github_com_openconfig_gnsi_pathz_pathz_proto_init() {
	if File_github_com_openconfig_gnsi_pathz_pathz_proto != nil {
		return
	}
	file_github_com_openconfig_gnsi_pathz_pathz_proto_msgTypes[0].OneofWrappers = []any{
		(*RotateRequest_UploadRequest)(nil),
		(*RotateRequest_FinalizeRotation)(nil),
	}
	file_github_com_openconfig_gnsi_pathz_pathz_proto_msgTypes[1].OneofWrappers = []any{
		(*RotateResponse_Upload)(nil),
	}
	file_github_com_openconfig_gnsi_pathz_pathz_proto_msgTypes[11].OneofWrappers = []any{
		(*AuthorizationRule_User)(nil),
		(*AuthorizationRule_Group)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_github_com_openconfig_gnsi_pathz_pathz_proto_rawDesc), len(file_github_com_openconfig_gnsi_pathz_pathz_proto_rawDesc)),
			NumEnums:      3,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_github_com_openconfig_gnsi_pathz_pathz_proto_goTypes,
		DependencyIndexes: file_github_com_openconfig_gnsi_pathz_pathz_proto_depIdxs,
		EnumInfos:         file_github_com_openconfig_gnsi_pathz_pathz_proto_enumTypes,
		MessageInfos:      file_github_com_openconfig_gnsi_pathz_pathz_proto_msgTypes,
	}.Build()
	File_github_com_openconfig_gnsi_pathz_pathz_proto = out.File
	file_github_com_openconfig_gnsi_pathz_pathz_proto_goTypes = nil
	file_github_com_openconfig_gnsi_pathz_pathz_proto_depIdxs = nil
}
