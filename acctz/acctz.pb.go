// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.10
// source: github.com/openconfig/gnsi/acctz/acctz.proto

package acctz

import (
	_ "github.com/openconfig/gnsi/version"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AuthDetail_AuthenStatus int32

const (
	AuthDetail_AUTHEN_STATUS_UNSPECIFIED AuthDetail_AuthenStatus = 0
	AuthDetail_AUTHEN_STATUS_PERMIT      AuthDetail_AuthenStatus = 1
	AuthDetail_AUTHEN_STATUS_DENY        AuthDetail_AuthenStatus = 2
)

// Enum value maps for AuthDetail_AuthenStatus.
var (
	AuthDetail_AuthenStatus_name = map[int32]string{
		0: "AUTHEN_STATUS_UNSPECIFIED",
		1: "AUTHEN_STATUS_PERMIT",
		2: "AUTHEN_STATUS_DENY",
	}
	AuthDetail_AuthenStatus_value = map[string]int32{
		"AUTHEN_STATUS_UNSPECIFIED": 0,
		"AUTHEN_STATUS_PERMIT":      1,
		"AUTHEN_STATUS_DENY":        2,
	}
)

func (x AuthDetail_AuthenStatus) Enum() *AuthDetail_AuthenStatus {
	p := new(AuthDetail_AuthenStatus)
	*p = x
	return p
}

func (x AuthDetail_AuthenStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AuthDetail_AuthenStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_github_com_openconfig_gnsi_acctz_acctz_proto_enumTypes[0].Descriptor()
}

func (AuthDetail_AuthenStatus) Type() protoreflect.EnumType {
	return &file_github_com_openconfig_gnsi_acctz_acctz_proto_enumTypes[0]
}

func (x AuthDetail_AuthenStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AuthDetail_AuthenStatus.Descriptor instead.
func (AuthDetail_AuthenStatus) EnumDescriptor() ([]byte, []int) {
	return file_github_com_openconfig_gnsi_acctz_acctz_proto_rawDescGZIP(), []int{1, 0}
}

type CommandService_CmdServiceType int32

const (
	CommandService_CMD_SERVICE_TYPE_UNSPECIFIED CommandService_CmdServiceType = 0
	CommandService_CMD_SERVICE_TYPE_SHELL       CommandService_CmdServiceType = 1
	CommandService_CMD_SERVICE_TYPE_CLI         CommandService_CmdServiceType = 2
	CommandService_CMD_SERVICE_TYPE_HTTP        CommandService_CmdServiceType = 3
	CommandService_CMD_SERVICE_TYPE_RESTCONF    CommandService_CmdServiceType = 4
	CommandService_CMD_SERVICE_TYPE_NETCONF     CommandService_CmdServiceType = 5
)

// Enum value maps for CommandService_CmdServiceType.
var (
	CommandService_CmdServiceType_name = map[int32]string{
		0: "CMD_SERVICE_TYPE_UNSPECIFIED",
		1: "CMD_SERVICE_TYPE_SHELL",
		2: "CMD_SERVICE_TYPE_CLI",
		3: "CMD_SERVICE_TYPE_HTTP",
		4: "CMD_SERVICE_TYPE_RESTCONF",
		5: "CMD_SERVICE_TYPE_NETCONF",
	}
	CommandService_CmdServiceType_value = map[string]int32{
		"CMD_SERVICE_TYPE_UNSPECIFIED": 0,
		"CMD_SERVICE_TYPE_SHELL":       1,
		"CMD_SERVICE_TYPE_CLI":         2,
		"CMD_SERVICE_TYPE_HTTP":        3,
		"CMD_SERVICE_TYPE_RESTCONF":    4,
		"CMD_SERVICE_TYPE_NETCONF":     5,
	}
)

func (x CommandService_CmdServiceType) Enum() *CommandService_CmdServiceType {
	p := new(CommandService_CmdServiceType)
	*p = x
	return p
}

func (x CommandService_CmdServiceType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CommandService_CmdServiceType) Descriptor() protoreflect.EnumDescriptor {
	return file_github_com_openconfig_gnsi_acctz_acctz_proto_enumTypes[1].Descriptor()
}

func (CommandService_CmdServiceType) Type() protoreflect.EnumType {
	return &file_github_com_openconfig_gnsi_acctz_acctz_proto_enumTypes[1]
}

func (x CommandService_CmdServiceType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CommandService_CmdServiceType.Descriptor instead.
func (CommandService_CmdServiceType) EnumDescriptor() ([]byte, []int) {
	return file_github_com_openconfig_gnsi_acctz_acctz_proto_rawDescGZIP(), []int{2, 0}
}

type GrpcService_GrpcServiceType int32

const (
	GrpcService_GRPC_SERVICE_TYPE_UNSPECIFIED GrpcService_GrpcServiceType = 0
	GrpcService_GRPC_SERVICE_TYPE_GNMI        GrpcService_GrpcServiceType = 1
	GrpcService_GRPC_SERVICE_TYPE_GNOI        GrpcService_GrpcServiceType = 2
	GrpcService_GRPC_SERVICE_TYPE_GNSI        GrpcService_GrpcServiceType = 3
	GrpcService_GRPC_SERVICE_TYPE_GRIBI       GrpcService_GrpcServiceType = 4
	GrpcService_GRPC_SERVICE_TYPE_P4RT        GrpcService_GrpcServiceType = 5
)

// Enum value maps for GrpcService_GrpcServiceType.
var (
	GrpcService_GrpcServiceType_name = map[int32]string{
		0: "GRPC_SERVICE_TYPE_UNSPECIFIED",
		1: "GRPC_SERVICE_TYPE_GNMI",
		2: "GRPC_SERVICE_TYPE_GNOI",
		3: "GRPC_SERVICE_TYPE_GNSI",
		4: "GRPC_SERVICE_TYPE_GRIBI",
		5: "GRPC_SERVICE_TYPE_P4RT",
	}
	GrpcService_GrpcServiceType_value = map[string]int32{
		"GRPC_SERVICE_TYPE_UNSPECIFIED": 0,
		"GRPC_SERVICE_TYPE_GNMI":        1,
		"GRPC_SERVICE_TYPE_GNOI":        2,
		"GRPC_SERVICE_TYPE_GNSI":        3,
		"GRPC_SERVICE_TYPE_GRIBI":       4,
		"GRPC_SERVICE_TYPE_P4RT":        5,
	}
)

func (x GrpcService_GrpcServiceType) Enum() *GrpcService_GrpcServiceType {
	p := new(GrpcService_GrpcServiceType)
	*p = x
	return p
}

func (x GrpcService_GrpcServiceType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GrpcService_GrpcServiceType) Descriptor() protoreflect.EnumDescriptor {
	return file_github_com_openconfig_gnsi_acctz_acctz_proto_enumTypes[2].Descriptor()
}

func (GrpcService_GrpcServiceType) Type() protoreflect.EnumType {
	return &file_github_com_openconfig_gnsi_acctz_acctz_proto_enumTypes[2]
}

func (x GrpcService_GrpcServiceType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GrpcService_GrpcServiceType.Descriptor instead.
func (GrpcService_GrpcServiceType) EnumDescriptor() ([]byte, []int) {
	return file_github_com_openconfig_gnsi_acctz_acctz_proto_rawDescGZIP(), []int{3, 0}
}

type SessionInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LocalAddress  string `protobuf:"bytes,1,opt,name=local_address,json=localAddress,proto3" json:"local_address,omitempty"`
	LocalPort     uint32 `protobuf:"varint,2,opt,name=local_port,json=localPort,proto3" json:"local_port,omitempty"`
	RemoteAddress string `protobuf:"bytes,3,opt,name=remote_address,json=remoteAddress,proto3" json:"remote_address,omitempty"`
	RemotePort    uint32 `protobuf:"varint,4,opt,name=remote_port,json=remotePort,proto3" json:"remote_port,omitempty"`
	IpProto       uint32 `protobuf:"varint,5,opt,name=ip_proto,json=ipProto,proto3" json:"ip_proto,omitempty"`
	ChannelId     string `protobuf:"bytes,6,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
}

func (x *SessionInfo) Reset() {
	*x = SessionInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_openconfig_gnsi_acctz_acctz_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SessionInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SessionInfo) ProtoMessage() {}

func (x *SessionInfo) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_gnsi_acctz_acctz_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SessionInfo.ProtoReflect.Descriptor instead.
func (*SessionInfo) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_gnsi_acctz_acctz_proto_rawDescGZIP(), []int{0}
}

func (x *SessionInfo) GetLocalAddress() string {
	if x != nil {
		return x.LocalAddress
	}
	return ""
}

func (x *SessionInfo) GetLocalPort() uint32 {
	if x != nil {
		return x.LocalPort
	}
	return 0
}

func (x *SessionInfo) GetRemoteAddress() string {
	if x != nil {
		return x.RemoteAddress
	}
	return ""
}

func (x *SessionInfo) GetRemotePort() uint32 {
	if x != nil {
		return x.RemotePort
	}
	return 0
}

func (x *SessionInfo) GetIpProto() uint32 {
	if x != nil {
		return x.IpProto
	}
	return 0
}

func (x *SessionInfo) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

type AuthDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Identity       string                  `protobuf:"bytes,1,opt,name=identity,proto3" json:"identity,omitempty"`
	PrivilegeLevel uint32                  `protobuf:"varint,2,opt,name=privilege_level,json=privilegeLevel,proto3" json:"privilege_level,omitempty"`
	Status         AuthDetail_AuthenStatus `protobuf:"varint,3,opt,name=status,proto3,enum=gnsi.acctz.v1.AuthDetail_AuthenStatus" json:"status,omitempty"`
	DenyCause      string                  `protobuf:"bytes,4,opt,name=deny_cause,json=denyCause,proto3" json:"deny_cause,omitempty"`
}

func (x *AuthDetail) Reset() {
	*x = AuthDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_openconfig_gnsi_acctz_acctz_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthDetail) ProtoMessage() {}

func (x *AuthDetail) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_gnsi_acctz_acctz_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthDetail.ProtoReflect.Descriptor instead.
func (*AuthDetail) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_gnsi_acctz_acctz_proto_rawDescGZIP(), []int{1}
}

func (x *AuthDetail) GetIdentity() string {
	if x != nil {
		return x.Identity
	}
	return ""
}

func (x *AuthDetail) GetPrivilegeLevel() uint32 {
	if x != nil {
		return x.PrivilegeLevel
	}
	return 0
}

func (x *AuthDetail) GetStatus() AuthDetail_AuthenStatus {
	if x != nil {
		return x.Status
	}
	return AuthDetail_AUTHEN_STATUS_UNSPECIFIED
}

func (x *AuthDetail) GetDenyCause() string {
	if x != nil {
		return x.DenyCause
	}
	return ""
}

type CommandService struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceType        CommandService_CmdServiceType `protobuf:"varint,1,opt,name=service_type,json=serviceType,proto3,enum=gnsi.acctz.v1.CommandService_CmdServiceType" json:"service_type,omitempty"`
	Cmd                string                        `protobuf:"bytes,2,opt,name=cmd,proto3" json:"cmd,omitempty"`
	CmdIstruncated     bool                          `protobuf:"varint,4,opt,name=cmd_istruncated,json=cmdIstruncated,proto3" json:"cmd_istruncated,omitempty"`
	CmdArgs            []string                      `protobuf:"bytes,3,rep,name=cmd_args,json=cmdArgs,proto3" json:"cmd_args,omitempty"`
	CmdArgsIstruncated bool                          `protobuf:"varint,5,opt,name=cmd_args_istruncated,json=cmdArgsIstruncated,proto3" json:"cmd_args_istruncated,omitempty"`
}

func (x *CommandService) Reset() {
	*x = CommandService{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_openconfig_gnsi_acctz_acctz_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommandService) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommandService) ProtoMessage() {}

func (x *CommandService) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_gnsi_acctz_acctz_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommandService.ProtoReflect.Descriptor instead.
func (*CommandService) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_gnsi_acctz_acctz_proto_rawDescGZIP(), []int{2}
}

func (x *CommandService) GetServiceType() CommandService_CmdServiceType {
	if x != nil {
		return x.ServiceType
	}
	return CommandService_CMD_SERVICE_TYPE_UNSPECIFIED
}

func (x *CommandService) GetCmd() string {
	if x != nil {
		return x.Cmd
	}
	return ""
}

func (x *CommandService) GetCmdIstruncated() bool {
	if x != nil {
		return x.CmdIstruncated
	}
	return false
}

func (x *CommandService) GetCmdArgs() []string {
	if x != nil {
		return x.CmdArgs
	}
	return nil
}

func (x *CommandService) GetCmdArgsIstruncated() bool {
	if x != nil {
		return x.CmdArgsIstruncated
	}
	return false
}

type GrpcService struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceType        GrpcService_GrpcServiceType `protobuf:"varint,1,opt,name=service_type,json=serviceType,proto3,enum=gnsi.acctz.v1.GrpcService_GrpcServiceType" json:"service_type,omitempty"`
	RpcName            string                      `protobuf:"bytes,2,opt,name=rpc_name,json=rpcName,proto3" json:"rpc_name,omitempty"`
	Payloads           []*anypb.Any                `protobuf:"bytes,3,rep,name=payloads,proto3" json:"payloads,omitempty"`
	PayloadIstruncated bool                        `protobuf:"varint,5,opt,name=payload_istruncated,json=payloadIstruncated,proto3" json:"payload_istruncated,omitempty"`
}

func (x *GrpcService) Reset() {
	*x = GrpcService{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_openconfig_gnsi_acctz_acctz_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GrpcService) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GrpcService) ProtoMessage() {}

func (x *GrpcService) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_gnsi_acctz_acctz_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GrpcService.ProtoReflect.Descriptor instead.
func (*GrpcService) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_gnsi_acctz_acctz_proto_rawDescGZIP(), []int{3}
}

func (x *GrpcService) GetServiceType() GrpcService_GrpcServiceType {
	if x != nil {
		return x.ServiceType
	}
	return GrpcService_GRPC_SERVICE_TYPE_UNSPECIFIED
}

func (x *GrpcService) GetRpcName() string {
	if x != nil {
		return x.RpcName
	}
	return ""
}

func (x *GrpcService) GetPayloads() []*anypb.Any {
	if x != nil {
		return x.Payloads
	}
	return nil
}

func (x *GrpcService) GetPayloadIstruncated() bool {
	if x != nil {
		return x.PayloadIstruncated
	}
	return false
}

type RecordResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionInfo        *SessionInfo           `protobuf:"bytes,1,opt,name=session_info,json=sessionInfo,proto3" json:"session_info,omitempty"`
	Timestamp          *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	HistoryIstruncated bool                   `protobuf:"varint,3,opt,name=history_istruncated,json=historyIstruncated,proto3" json:"history_istruncated,omitempty"`
	// Types that are assignable to ServiceRequest:
	//	*RecordResponse_CmdService
	//	*RecordResponse_GrpcService
	ServiceRequest isRecordResponse_ServiceRequest `protobuf_oneof:"service_request"`
	Authen         *AuthDetail                     `protobuf:"bytes,7,opt,name=authen,proto3" json:"authen,omitempty"`
	TaskIds        []string                        `protobuf:"bytes,32,rep,name=task_ids,json=taskIds,proto3" json:"task_ids,omitempty"`
}

func (x *RecordResponse) Reset() {
	*x = RecordResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_openconfig_gnsi_acctz_acctz_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecordResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordResponse) ProtoMessage() {}

func (x *RecordResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_gnsi_acctz_acctz_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordResponse.ProtoReflect.Descriptor instead.
func (*RecordResponse) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_gnsi_acctz_acctz_proto_rawDescGZIP(), []int{4}
}

func (x *RecordResponse) GetSessionInfo() *SessionInfo {
	if x != nil {
		return x.SessionInfo
	}
	return nil
}

func (x *RecordResponse) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *RecordResponse) GetHistoryIstruncated() bool {
	if x != nil {
		return x.HistoryIstruncated
	}
	return false
}

func (m *RecordResponse) GetServiceRequest() isRecordResponse_ServiceRequest {
	if m != nil {
		return m.ServiceRequest
	}
	return nil
}

func (x *RecordResponse) GetCmdService() *CommandService {
	if x, ok := x.GetServiceRequest().(*RecordResponse_CmdService); ok {
		return x.CmdService
	}
	return nil
}

func (x *RecordResponse) GetGrpcService() *GrpcService {
	if x, ok := x.GetServiceRequest().(*RecordResponse_GrpcService); ok {
		return x.GrpcService
	}
	return nil
}

func (x *RecordResponse) GetAuthen() *AuthDetail {
	if x != nil {
		return x.Authen
	}
	return nil
}

func (x *RecordResponse) GetTaskIds() []string {
	if x != nil {
		return x.TaskIds
	}
	return nil
}

type isRecordResponse_ServiceRequest interface {
	isRecordResponse_ServiceRequest()
}

type RecordResponse_CmdService struct {
	CmdService *CommandService `protobuf:"bytes,4,opt,name=cmd_service,json=cmdService,proto3,oneof"`
}

type RecordResponse_GrpcService struct {
	GrpcService *GrpcService `protobuf:"bytes,5,opt,name=grpc_service,json=grpcService,proto3,oneof"`
}

func (*RecordResponse_CmdService) isRecordResponse_ServiceRequest() {}

func (*RecordResponse_GrpcService) isRecordResponse_ServiceRequest() {}

type RecordRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *RecordRequest) Reset() {
	*x = RecordRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_openconfig_gnsi_acctz_acctz_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordRequest) ProtoMessage() {}

func (x *RecordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_gnsi_acctz_acctz_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordRequest.ProtoReflect.Descriptor instead.
func (*RecordRequest) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_gnsi_acctz_acctz_proto_rawDescGZIP(), []int{5}
}

func (x *RecordRequest) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

var File_github_com_openconfig_gnsi_acctz_acctz_proto protoreflect.FileDescriptor

var file_github_com_openconfig_gnsi_acctz_acctz_proto_rawDesc = []byte{
	0x0a, 0x2c, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6f, 0x70, 0x65,
	0x6e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f, 0x67, 0x6e, 0x73, 0x69, 0x2f, 0x61, 0x63, 0x63,
	0x74, 0x7a, 0x2f, 0x61, 0x63, 0x63, 0x74, 0x7a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d,
	0x67, 0x6e, 0x73, 0x69, 0x2e, 0x61, 0x63, 0x63, 0x74, 0x7a, 0x2e, 0x76, 0x31, 0x1a, 0x19, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61,
	0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x30, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6f, 0x70, 0x65, 0x6e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x2f, 0x67, 0x6e, 0x73, 0x69, 0x2f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x2f, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xd3, 0x01, 0x0a, 0x0b,
	0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x23, 0x0a, 0x0d, 0x6c,
	0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x50, 0x6f, 0x72, 0x74, 0x12,
	0x25, 0x0a, 0x0e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65,
	0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x72, 0x65, 0x6d,
	0x6f, 0x74, 0x65, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x70, 0x5f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x69, 0x70, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49,
	0x64, 0x22, 0x91, 0x02, 0x0a, 0x0a, 0x41, 0x75, 0x74, 0x68, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x12, 0x1a, 0x0a, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x27, 0x0a, 0x0f,
	0x70, 0x72, 0x69, 0x76, 0x69, 0x6c, 0x65, 0x67, 0x65, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x70, 0x72, 0x69, 0x76, 0x69, 0x6c, 0x65, 0x67, 0x65,
	0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x3e, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x26, 0x2e, 0x67, 0x6e, 0x73, 0x69, 0x2e, 0x61, 0x63, 0x63,
	0x74, 0x7a, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x2e, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x65, 0x6e, 0x79, 0x5f, 0x63, 0x61,
	0x75, 0x73, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x65, 0x6e, 0x79, 0x43,
	0x61, 0x75, 0x73, 0x65, 0x22, 0x5f, 0x0a, 0x0c, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x1d, 0x0a, 0x19, 0x41, 0x55, 0x54, 0x48, 0x45, 0x4e, 0x5f, 0x53,
	0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45,
	0x44, 0x10, 0x00, 0x12, 0x18, 0x0a, 0x14, 0x41, 0x55, 0x54, 0x48, 0x45, 0x4e, 0x5f, 0x53, 0x54,
	0x41, 0x54, 0x55, 0x53, 0x5f, 0x50, 0x45, 0x52, 0x4d, 0x49, 0x54, 0x10, 0x01, 0x12, 0x16, 0x0a,
	0x12, 0x41, 0x55, 0x54, 0x48, 0x45, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x44,
	0x45, 0x4e, 0x59, 0x10, 0x02, 0x22, 0xac, 0x03, 0x0a, 0x0e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e,
	0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4f, 0x0a, 0x0c, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2c,
	0x2e, 0x67, 0x6e, 0x73, 0x69, 0x2e, 0x61, 0x63, 0x63, 0x74, 0x7a, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x6d,
	0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x6d, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x63,
	0x6d, 0x64, 0x5f, 0x69, 0x73, 0x74, 0x72, 0x75, 0x6e, 0x63, 0x61, 0x74, 0x65, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x63, 0x6d, 0x64, 0x49, 0x73, 0x74, 0x72, 0x75, 0x6e, 0x63,
	0x61, 0x74, 0x65, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x6d, 0x64, 0x5f, 0x61, 0x72, 0x67, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6d, 0x64, 0x41, 0x72, 0x67, 0x73, 0x12,
	0x30, 0x0a, 0x14, 0x63, 0x6d, 0x64, 0x5f, 0x61, 0x72, 0x67, 0x73, 0x5f, 0x69, 0x73, 0x74, 0x72,
	0x75, 0x6e, 0x63, 0x61, 0x74, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x63,
	0x6d, 0x64, 0x41, 0x72, 0x67, 0x73, 0x49, 0x73, 0x74, 0x72, 0x75, 0x6e, 0x63, 0x61, 0x74, 0x65,
	0x64, 0x22, 0xc0, 0x01, 0x0a, 0x0e, 0x43, 0x6d, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x1c, 0x43, 0x4d, 0x44, 0x5f, 0x53, 0x45, 0x52, 0x56,
	0x49, 0x43, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49,
	0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1a, 0x0a, 0x16, 0x43, 0x4d, 0x44, 0x5f, 0x53, 0x45,
	0x52, 0x56, 0x49, 0x43, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x53, 0x48, 0x45, 0x4c, 0x4c,
	0x10, 0x01, 0x12, 0x18, 0x0a, 0x14, 0x43, 0x4d, 0x44, 0x5f, 0x53, 0x45, 0x52, 0x56, 0x49, 0x43,
	0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x43, 0x4c, 0x49, 0x10, 0x02, 0x12, 0x19, 0x0a, 0x15,
	0x43, 0x4d, 0x44, 0x5f, 0x53, 0x45, 0x52, 0x56, 0x49, 0x43, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45,
	0x5f, 0x48, 0x54, 0x54, 0x50, 0x10, 0x03, 0x12, 0x1d, 0x0a, 0x19, 0x43, 0x4d, 0x44, 0x5f, 0x53,
	0x45, 0x52, 0x56, 0x49, 0x43, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x52, 0x45, 0x53, 0x54,
	0x43, 0x4f, 0x4e, 0x46, 0x10, 0x04, 0x12, 0x1c, 0x0a, 0x18, 0x43, 0x4d, 0x44, 0x5f, 0x53, 0x45,
	0x52, 0x56, 0x49, 0x43, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4e, 0x45, 0x54, 0x43, 0x4f,
	0x4e, 0x46, 0x10, 0x05, 0x22, 0x9e, 0x03, 0x0a, 0x0b, 0x47, 0x72, 0x70, 0x63, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x4d, 0x0a, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2a, 0x2e, 0x67, 0x6e, 0x73,
	0x69, 0x2e, 0x61, 0x63, 0x63, 0x74, 0x7a, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x72, 0x70, 0x63, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x72, 0x70, 0x63, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x70, 0x63, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x70, 0x63, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x30,
	0x0a, 0x08, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x08, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x73,
	0x12, 0x2f, 0x0a, 0x13, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x69, 0x73, 0x74, 0x72,
	0x75, 0x6e, 0x63, 0x61, 0x74, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x70,
	0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x73, 0x74, 0x72, 0x75, 0x6e, 0x63, 0x61, 0x74, 0x65,
	0x64, 0x22, 0xc1, 0x01, 0x0a, 0x0f, 0x47, 0x72, 0x70, 0x63, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x1d, 0x47, 0x52, 0x50, 0x43, 0x5f, 0x53, 0x45,
	0x52, 0x56, 0x49, 0x43, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45,
	0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1a, 0x0a, 0x16, 0x47, 0x52, 0x50, 0x43,
	0x5f, 0x53, 0x45, 0x52, 0x56, 0x49, 0x43, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x47, 0x4e,
	0x4d, 0x49, 0x10, 0x01, 0x12, 0x1a, 0x0a, 0x16, 0x47, 0x52, 0x50, 0x43, 0x5f, 0x53, 0x45, 0x52,
	0x56, 0x49, 0x43, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x47, 0x4e, 0x4f, 0x49, 0x10, 0x02,
	0x12, 0x1a, 0x0a, 0x16, 0x47, 0x52, 0x50, 0x43, 0x5f, 0x53, 0x45, 0x52, 0x56, 0x49, 0x43, 0x45,
	0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x47, 0x4e, 0x53, 0x49, 0x10, 0x03, 0x12, 0x1b, 0x0a, 0x17,
	0x47, 0x52, 0x50, 0x43, 0x5f, 0x53, 0x45, 0x52, 0x56, 0x49, 0x43, 0x45, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x47, 0x52, 0x49, 0x42, 0x49, 0x10, 0x04, 0x12, 0x1a, 0x0a, 0x16, 0x47, 0x52, 0x50,
	0x43, 0x5f, 0x53, 0x45, 0x52, 0x56, 0x49, 0x43, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x50,
	0x34, 0x52, 0x54, 0x10, 0x05, 0x22, 0x9e, 0x03, 0x0a, 0x0e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x0c, 0x73, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6e, 0x73, 0x69, 0x2e, 0x61, 0x63, 0x63, 0x74, 0x7a, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x73, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x12, 0x2f, 0x0a, 0x13, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x73, 0x74,
	0x72, 0x75, 0x6e, 0x63, 0x61, 0x74, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12,
	0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x73, 0x74, 0x72, 0x75, 0x6e, 0x63, 0x61, 0x74,
	0x65, 0x64, 0x12, 0x40, 0x0a, 0x0b, 0x63, 0x6d, 0x64, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x67, 0x6e, 0x73, 0x69, 0x2e, 0x61,
	0x63, 0x63, 0x74, 0x7a, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x48, 0x00, 0x52, 0x0a, 0x63, 0x6d, 0x64, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x3f, 0x0a, 0x0c, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6e, 0x73,
	0x69, 0x2e, 0x61, 0x63, 0x63, 0x74, 0x7a, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x72, 0x70, 0x63, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x48, 0x00, 0x52, 0x0b, 0x67, 0x72, 0x70, 0x63, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x31, 0x0a, 0x06, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6e, 0x73, 0x69, 0x2e, 0x61, 0x63, 0x63,
	0x74, 0x7a, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x52, 0x06, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x61, 0x73, 0x6b,
	0x5f, 0x69, 0x64, 0x73, 0x18, 0x20, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x74, 0x61, 0x73, 0x6b,
	0x49, 0x64, 0x73, 0x42, 0x11, 0x0a, 0x0f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x49, 0x0a, 0x0d, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x32, 0x5b, 0x0a, 0x05, 0x41, 0x63, 0x63, 0x74, 0x7a, 0x12, 0x52, 0x0a, 0x0f, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x12, 0x1c, 0x2e,
	0x67, 0x6e, 0x73, 0x69, 0x2e, 0x61, 0x63, 0x63, 0x74, 0x7a, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x67, 0x6e,
	0x73, 0x69, 0x2e, 0x61, 0x63, 0x63, 0x74, 0x7a, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x28, 0x01, 0x30, 0x01, 0x42, 0x22,
	0x5a, 0x20, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6f, 0x70, 0x65,
	0x6e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f, 0x67, 0x6e, 0x73, 0x69, 0x2f, 0x61, 0x63, 0x63,
	0x74, 0x7a, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_github_com_openconfig_gnsi_acctz_acctz_proto_rawDescOnce sync.Once
	file_github_com_openconfig_gnsi_acctz_acctz_proto_rawDescData = file_github_com_openconfig_gnsi_acctz_acctz_proto_rawDesc
)

func file_github_com_openconfig_gnsi_acctz_acctz_proto_rawDescGZIP() []byte {
	file_github_com_openconfig_gnsi_acctz_acctz_proto_rawDescOnce.Do(func() {
		file_github_com_openconfig_gnsi_acctz_acctz_proto_rawDescData = protoimpl.X.CompressGZIP(file_github_com_openconfig_gnsi_acctz_acctz_proto_rawDescData)
	})
	return file_github_com_openconfig_gnsi_acctz_acctz_proto_rawDescData
}

var file_github_com_openconfig_gnsi_acctz_acctz_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_github_com_openconfig_gnsi_acctz_acctz_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_github_com_openconfig_gnsi_acctz_acctz_proto_goTypes = []interface{}{
	(AuthDetail_AuthenStatus)(0),       // 0: gnsi.acctz.v1.AuthDetail.AuthenStatus
	(CommandService_CmdServiceType)(0), // 1: gnsi.acctz.v1.CommandService.CmdServiceType
	(GrpcService_GrpcServiceType)(0),   // 2: gnsi.acctz.v1.GrpcService.GrpcServiceType
	(*SessionInfo)(nil),                // 3: gnsi.acctz.v1.SessionInfo
	(*AuthDetail)(nil),                 // 4: gnsi.acctz.v1.AuthDetail
	(*CommandService)(nil),             // 5: gnsi.acctz.v1.CommandService
	(*GrpcService)(nil),                // 6: gnsi.acctz.v1.GrpcService
	(*RecordResponse)(nil),             // 7: gnsi.acctz.v1.RecordResponse
	(*RecordRequest)(nil),              // 8: gnsi.acctz.v1.RecordRequest
	(*anypb.Any)(nil),                  // 9: google.protobuf.Any
	(*timestamppb.Timestamp)(nil),      // 10: google.protobuf.Timestamp
}
var file_github_com_openconfig_gnsi_acctz_acctz_proto_depIdxs = []int32{
	0,  // 0: gnsi.acctz.v1.AuthDetail.status:type_name -> gnsi.acctz.v1.AuthDetail.AuthenStatus
	1,  // 1: gnsi.acctz.v1.CommandService.service_type:type_name -> gnsi.acctz.v1.CommandService.CmdServiceType
	2,  // 2: gnsi.acctz.v1.GrpcService.service_type:type_name -> gnsi.acctz.v1.GrpcService.GrpcServiceType
	9,  // 3: gnsi.acctz.v1.GrpcService.payloads:type_name -> google.protobuf.Any
	3,  // 4: gnsi.acctz.v1.RecordResponse.session_info:type_name -> gnsi.acctz.v1.SessionInfo
	10, // 5: gnsi.acctz.v1.RecordResponse.timestamp:type_name -> google.protobuf.Timestamp
	5,  // 6: gnsi.acctz.v1.RecordResponse.cmd_service:type_name -> gnsi.acctz.v1.CommandService
	6,  // 7: gnsi.acctz.v1.RecordResponse.grpc_service:type_name -> gnsi.acctz.v1.GrpcService
	4,  // 8: gnsi.acctz.v1.RecordResponse.authen:type_name -> gnsi.acctz.v1.AuthDetail
	10, // 9: gnsi.acctz.v1.RecordRequest.timestamp:type_name -> google.protobuf.Timestamp
	8,  // 10: gnsi.acctz.v1.Acctz.RecordSubscribe:input_type -> gnsi.acctz.v1.RecordRequest
	7,  // 11: gnsi.acctz.v1.Acctz.RecordSubscribe:output_type -> gnsi.acctz.v1.RecordResponse
	11, // [11:12] is the sub-list for method output_type
	10, // [10:11] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_github_com_openconfig_gnsi_acctz_acctz_proto_init() }
func file_github_com_openconfig_gnsi_acctz_acctz_proto_init() {
	if File_github_com_openconfig_gnsi_acctz_acctz_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_github_com_openconfig_gnsi_acctz_acctz_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SessionInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_openconfig_gnsi_acctz_acctz_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_openconfig_gnsi_acctz_acctz_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommandService); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_openconfig_gnsi_acctz_acctz_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GrpcService); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_openconfig_gnsi_acctz_acctz_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecordResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_openconfig_gnsi_acctz_acctz_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecordRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_github_com_openconfig_gnsi_acctz_acctz_proto_msgTypes[4].OneofWrappers = []interface{}{
		(*RecordResponse_CmdService)(nil),
		(*RecordResponse_GrpcService)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_github_com_openconfig_gnsi_acctz_acctz_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_github_com_openconfig_gnsi_acctz_acctz_proto_goTypes,
		DependencyIndexes: file_github_com_openconfig_gnsi_acctz_acctz_proto_depIdxs,
		EnumInfos:         file_github_com_openconfig_gnsi_acctz_acctz_proto_enumTypes,
		MessageInfos:      file_github_com_openconfig_gnsi_acctz_acctz_proto_msgTypes,
	}.Build()
	File_github_com_openconfig_gnsi_acctz_acctz_proto = out.File
	file_github_com_openconfig_gnsi_acctz_acctz_proto_rawDesc = nil
	file_github_com_openconfig_gnsi_acctz_acctz_proto_goTypes = nil
	file_github_com_openconfig_gnsi_acctz_acctz_proto_depIdxs = nil
}
